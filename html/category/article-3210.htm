<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3210.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Nacos Config服务配置详解 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">Nacos Config服务配置详解</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<h1 id="tid-3YCTBi"><strong style="font-size: 1em;"><span style="font-size: 18px">配置中心原理</span></strong><br /></h1> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/90777577351ca4661a02eea25e518be2.jpg" alt="Nacos Config服务配置详解"></p> <h1><strong>一、</strong>服务配置中心介绍</h1> <p>首先我们来看一下,微服务架构下关于配置文件的一些问题：</p> <ol> <li><strong>配置文件相对分散</strong>。在一个微服务架构下，配置文件会随着微服务的增多变的越来越多，而且分散在各个微服务中，不好统一配置和管理。</li> <li><strong>配置文件无法区分环境</strong>。微服务项目可能会有多个环境，例如：测试环境、预发布环境、生产环境。每一个环境所使用的配置理论上都是不同的，一旦需要修改，就需要我们去各个微服务下手动<br />维护，这比较困难。</li> <li><strong>配置文件</strong>无法实时更新。我们修改了配置文件之后，必须重新启动微服务才能使配置生效，这对一<br />个正在运行的项目来说是非常不友好的。<br />基于上面这些问题，我们就需要配置中心的加入来解决这些问题。</li> </ol> <p><strong>配置中心的思路是：</strong></p> <ul> <li>首先把项目中各种配置全部都放到一个集中的地方进行统一管理，并提供一套标准的接口。</li> <li>当各个服务需要获取配置的时候，就来配置中心的接口拉取自己的配置。</li> <li>当配置中心中的各种参数有更新的时候，也能通知到各个服务实时的过来同步最新的信息，使之动态更新。</li> </ul> <p><strong>当加入了服务配置中心之后，我们的系统架构图会变成下面这样：</strong></p> <p><strong><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/1524a39ee7d7ab44cf7b166a52b22d46.jpg" alt="Nacos Config服务配置详解"></strong></p> <p>&nbsp;在业界常见的服务配置中心，有下面这些：</p> <ul> <li><strong><code>Apollo</code></strong></li> </ul> <p><strong>Apollo是由携程开源的分布式配置中心</strong>。特点有很多，比如：配置更新之后可以实时生效，支持灰度发布功能，并且能对所有的配置进行版本管理、操作审计等功能，提供开放平台API。并且资料也写的很详细。</p> <ul> <li><strong><code>Disconf</code></strong></li> </ul> <p><strong>Disconf是由百度开源的分布式配置中心</strong>。它是基于Zookeeper来实现配置变更后实时通知和生效的。</p> <ul> <li><strong><code>SpringCloud</code></strong><strong><code>Config</code></strong></li> </ul> <p><strong>这是Spring Cloud中带的配置中心组件</strong>。它和Spring是无缝集成，使用起来非常方便，并且它的配置存储支持Git。不过它没有可视化的操作界面，配置的生效也不是实时的，需要重启或去刷新。</p> <ul> <li> <p><strong><code>Nacos</code></strong></p> </li> </ul> <p><strong>这是SpingCloud alibaba技术栈中的一个组件</strong>，前面我们已经使用它做过服务注册中心。其实它也集成了服务配置的功能，我们可以直接使用它作为服务配置中心。</p> <h1>二、Nacos Config入门</h1> <p>使用nacos作为配置中心，其实就是将nacos当做一个服务端，将各个微服务看成是客户端，我们将各个微服务的配置文件统一存放在nacos上，然后各个微服务从nacos上拉取配置即可。</p> <h2>2.1 在父工程中<strong>在微服务中引入nacos的依赖</strong></h2> <div class="cnblogs_code"> <pre>      &lt;!--nacos配置中心依赖 推荐使用--&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;             &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;             &lt;version&gt;2.1.1.RELEASE&lt;/version&gt;         &lt;/dependency&gt;         &lt;!--nacos配置中心依赖--&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;             &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;             &lt;version&gt;0.2.1.RELEASE&lt;/version&gt;         &lt;/dependency&gt;</pre> </div> <h2>2.2<strong>在微服务中添加nacos config的配置</strong></h2> <p><strong><code>注意:不能使用原来的application.yml作为配置文件，而是新建一个bootstrap.yml作为配置文件</code></strong></p> <p>配置文件优先级(由高到低):<br />bootstrap.properties -&gt; bootstrap.yml -&gt; application.properties -&gt; application.yml</p> <hr/> <div class="cnblogs_code"> <pre><span>#消费者配置 server:   port: 8082  spring:   application:     name: nacos-consumer #服务名称   cloud:     nacos:       config: #使用配置中心         enabled: true #配置全局开关 默认true开启         server-addr: 192.168.36.135:8848         file-extension: yaml # 此处为配置使用的后缀名         prefix: nacos-consumer #DataId 名称（默认就是服务名称）         group: DEFAULT_GROUP #分组名称       discovery:  #使用注册中心         server-addr: 192.168.36.135:8848 #服务地址         enabled: true #是否开启注册 默认true开启    profiles:       active: dev  #读取指定配置文件dev(开发环境),prod(生产环境),test(测试环境)  #开启断路器 feign:  hystrix:    enabled: true  #自定义属性 test:   name: "测试数据"</span></pre> </div> <h2>2.3&nbsp;&nbsp;在nacos中添加配置</h2> <p>点击配置列表，点击右边+号，新建配置。在新建配置过程中，要注意下面的细节：<br />1）Data ID不能随便写，要跟配置文件中的对应，对应关系如图所示<br />2）配置文件格式要跟配置文件的格式对应，且目前仅仅支持YAML和Properties<br />3）配置内容按照上面选定的格式书写</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/9473deca14ad6926f672f65cb0c948cb.jpg" alt="Nacos Config服务配置详解"></p> <p><strong>注释本地的application.yam中的内容， 启动程序进行测试</strong></p> <p>如果依旧可以成功访问程序，说明我们nacos的配置中心功能已经实现</p> <h1>三、Nacos Config深入</h1> <h2>3.1 配置动态刷新</h2> <p>在入门案例中，我们实现了配置的远程存放，但是此时如果修改了配置，我们的程序是无法读取到的，因此，我们需要开启配置的动态刷新功能。</p> <h2><strong>3.2 获取自定义属性</strong></h2> <p><strong>方式一: 硬编码方式</strong></p> <div class="cnblogs_code"> <pre><span>@RestController public class<span> NacosConfig {      @Autowired     private ConfigurableApplicationContext applicationContext;//获取程序应用上下文       /**      * .      * 硬编码方式      *      * @return      */<span>     @GetMapping("/nacos-config"<span>)     public<span> String nacosConfig() {         return applicationContext.getEnvironment().getProperty("test.name"<span>);     }  }</span></span></span></span></span></span></pre> </div> <p><strong>方式二: 注解方式(推荐)</strong></p> <div class="cnblogs_code"> <pre>@RefreshScope// 添加此注解表示会实时更新value 另外需要给属性添加get set方法<span>@RestController @Data public class<span> NacosConfig {       /**      * .      * 获取自定义属性值      */<span>     @Value("${test.name:default}"<span>)     private<span> String name;        /**      * .      * 使用注解方式      *      * @return      */<span>     @GetMapping("/config"<span>)     public<span> String config() {         return<span> name;     }</span></span></span></span></span></span></span></span></span></pre> </div> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/041d3ef9d75c9d463650760eda69b9d9.jpg" alt="Nacos Config服务配置详解"></p> <h1>四、配置共享</h1> <p><strong>当配置越来越多的时候，我们就发现有很多配置是重复的，这时候就可以考虑将公共配置文件提取出来，然后实现共享</strong></p> <h2><strong>4.1 新建一个名为nacos-common.yaml公共配置</strong></h2> <p><strong>只需要提取一个以<code>nacos.common.yaml</code>命名的配置文件，然后将其所有环境的公共配置放在里面即可。</strong></p> <div class="cnblogs_code"> <pre><span>#公用配置 spring:   cloud:     nacos:       discovery:  #使用注册中心         server-addr: 192.168.36.135:8848         enabled: true #开启注册</span></pre> </div> <p><strong><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/37de3ead62e36fbf4da24398e367d66a.jpg" alt="Nacos Config服务配置详解"></strong></p> <h2><strong>4.2</strong>修改<strong>provider</strong>及<strong>consumer</strong>中的<strong>bootstrap.yml</strong></h2> <div class="cnblogs_code"> <pre><span>spring:   application:     name: nacos-consumer   cloud:     nacos:       config: #使用配置中心         enabled: true         server-addr: 192.168.36.135:8848         file-extension: yaml # 此处为配置使用的后缀名         prefix: nacos-consumer         group: DEFAULT_GROUP  #分组名称         shared-dataids: nacos-common.yaml #配置引入公共配置         refreshable-dataids: nacos-common.yaml # 配置要实现动态配置刷新的配置 #      discovery:  #使用注册中心 #        server-addr: 192.168.36.135:8848 #        enabled: true</span></pre> </div> <p>查看Nacos服务列表，发现服务依旧注册成功，说明我们抽取公共配置功能已经实现</p> <p><strong><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/5eabffd1c132777d0d0cb1e82264e231.jpg" alt="Nacos Config服务配置详解"></strong></p> <h1>&nbsp;五、基本概念</h1> <p><strong>命名空间(Namespace)</strong><br />命名空间可用于进行不同环境的配置隔离。一般一个环境划分到一个命名空间<br /><strong>配置分组(Group)</strong><br />配置分组用于将不同的服务可以归类到同一分组。一般将一个项目的配置分到一组<br /><strong>配置集(Data ID)</strong><br />在系统中，一个配置文件通常就是一个配置集。一般微服务的配置就是一个配置集</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/9133a48226340c7db80973be74d78234.jpg" alt="Nacos Config服务配置详解"></p> <h2>5.1 命名空间实例</h2> <p>如上述所说：一个环境划分到一个命名空间，此处<strong>新建pro（生产环境命名空间）、dev（开发环境命名空间）</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/8f05a35bd47d665e473dfb9382eda531.jpg" alt="Nacos Config服务配置详解"></p> <h2>5.2 配置列表</h2> <p><strong><span style="font-size: 16px">在配置列表中可选多个命名空间：新建配置，即使Data ID 名称重复，也达到配置隔离的效果</span></strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/62979278d5e54c69c806adb1045a0906.jpg" alt="Nacos Config服务配置详解"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/fc53b31114556ddc6ad257cf7ac44ba5.jpg" alt="Nacos Config服务配置详解"></p> <h2>5.3 使用样例项目</h2> <p>修改<strong>consumer</strong>中的<strong>bootstrap.yml指定使用命名空间</strong></p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 0, 1)">spring:   application:     name: nacos-consumer #服务名称   cloud:     nacos:       config: #使用配置中心         enabled: true #配置全局开关 默认true开启         server-addr: 172.16.18.176:8848         file-extension: yaml # 配置文件格式         prefix: nacos-consumer #DataId 名称（默认就是服务名称）         group: DEFAULT_GROUP  #分组名称         shared-dataids: nacos-common.yaml #配置引入公共配置         refreshable-dataids: nacos-common.yaml # 配置要实现动态配置刷新的配置         namespace: 42910b90-d7f5-4342-b121-e0ebd429388f #命名空间ID（默认public）</span></pre> </div> <p><span style="font-size: 16px">上述指定读取dev开发环境命名空间的配置文件（控制台输出打印）</span></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/a92537f7e4a17e8e67103ac2dbdf84de.jpg" alt="Nacos Config服务配置详解"></p> <p><span style="font-size: 16px">&nbsp;修改上述namespace命名空间ID指定pro生产环境配置（控制台输出打印）</span></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/6f784a892ffcc7ab7ee045656d16b80f.jpg" alt="Nacos Config服务配置详解"></p> <h1>&nbsp;六、配置集迁移</h1> <h2>6.1 配置集导出</h2> <p><span style="font-size: 16px">勾选若干配置集，点击导出选中的配置，可获得一个压缩包</span></p> <p><strong><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/9f1a5478e2540628f5d6f5398bb84061.jpg" alt="Nacos Config服务配置详解"></strong></p> <h2>6.2 配置集导入</h2> <p><span style="font-size: 16px">点击右上角导入配置，可选择导出的压缩包文件，将压缩包内的文件恢复为Nacos配置集</span></p> <p><strong><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/830d596b578d2ab4c51d599fb81f9845.jpg" alt="Nacos Config服务配置详解"></strong></p> <h2>6.3 配置集克隆</h2> <p><span style="font-size: 16px">点击左下角克隆按钮，将弹出克隆对话框，此功能可用于将配置迁移其它Namespace</span></p> <p><strong><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/6864f8caa69bb00a03a13a2a63d67bac.jpg" alt="Nacos Config服务配置详解"></strong></p> <h1 id="tid-DZmpFz"></h1> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3209.htm">使用 Spring Profiles 的正确姿势</a></p>
                                                <p>下一个：<a href="/html/category/article-3211.htm">Java连接MySQL数据——命令行程序</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3410.htm" title="innoDB如何解决幻读详解">innoDB如何解决幻读详解</a></li>
                        <li class="py-2"><a href="/html/category/article-3420.htm" title="mysql从服务列表里消失">mysql从服务列表里消失</a></li>
                        <li class="py-2"><a href="/html/category/article-3389.htm" title="树莓派开发笔记入手研华ADVANTECH工控树莓派UNO-220套件介绍和运行系统">树莓派开发笔记入手研华ADVANTECH工控树莓派UNO-220套件介绍和运行系统</a></li>
                        <li class="py-2"><a href="/html/category/article-4090.htm" title="设计模式学习笔记责任链模式实现及在Filter中的应用详解">设计模式学习笔记责任链模式实现及在Filter中的应用详解</a></li>
                        <li class="py-2"><a href="/html/category/article-3390.htm" title="springcloud-的使用alibaba版&#8212;&#8212;Nacos Discovery&#8211;服务治理">springcloud-的使用alibaba版&#8212;&#8212;Nacos Discovery&#8211;服务治理</a></li>
                        <li class="py-2"><a href="/html/category/article-4391.htm" title="足球100分2021（难以置信）足球100分陆姝，吴岚，足球100分，">足球100分2021（难以置信）足球100分陆姝，吴岚，足球100分，</a></li>
                        <li class="py-2"><a href="/html/category/article-3396.htm" title="CentOS7设置固定IP地址详解">CentOS7设置固定IP地址详解</a></li>
                        <li class="py-2"><a href="/html/category/article-4117.htm" title="搭建vue3.0+Element Plus项目">搭建vue3.0+Element Plus项目</a></li>
                        <li class="py-2"><a href="/html/category/article-3394.htm" title="C++编程——C++对象模型和this指针">C++编程——C++对象模型和this指针</a></li>
                        <li class="py-2"><a href="/html/category/article-4345.htm" title="国产机油品牌有哪些牌子(国产润滑油十大名牌)">国产机油品牌有哪些牌子(国产润滑油十大名牌)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>