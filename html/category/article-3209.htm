<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3209.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>使用 Spring Profiles 的正确姿势 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">使用 Spring Profiles 的正确姿势</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1> <a id="Spring_Profiles_0" rel="nofollow"></a>Spring Profiles</h1> <p>今天学习下，Spring的核心功能之一 profiles，该特性允许开发者将beans映射到不同的环境中，如dev、test、prod。开发者启动服务时，可以根据自身需要在不同的环境中激活不同的配置。</p> <h2> <a id="beanprofile_4" rel="nofollow"></a>bean使用profile注解</h2> <p>先来学习一个最简单profle的使用方式，学习如何让bean属于特定的环境。假设一个场景：一个普通的bean，只在开发期间有效，其他环境无效。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Component</span> <span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">"dev"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DevDatasourceConfig</span><span class="token punctuation">{<!-- --></span>  <span class="token punctuation">}</span> </code></pre> <p>如上述代码，只需要在声明bean时，配合@Profile注解，并指定特定的环境即可。根据上面的场景，反过来看：假设一个bean除了在开发期间无效，在其他环境（如test、prod）有效。@Profile支持NOT操作，只需要在前面加上 <strong>!</strong> 符号。例如 !dev, 就可以将dev环境排除。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Component</span> <span class="token annotation punctuation">@Profile</span><span class="token punctuation">(</span><span class="token string">"!dev"</span><span class="token punctuation">)</span> <span class="token comment">// @Profile(value={"dev &amp; local"})</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DevDatasourceConfig</span><span class="token punctuation">{<!-- --></span>  <span class="token punctuation">}</span> </code></pre> <h2> <a id="XMLprofile_27" rel="nofollow"></a>XML声明profile</h2> <p>在XML配置文件中也可以配置profiles属性, <em></em> 标签中定义了一个 profile 属性，多个属性值可以使用逗号分隔</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">profile</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dev<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>devDatasourceConfig<span class="token punctuation">"</span></span>        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.baeldung.profiles.DevDatasourceConfig<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span> </code></pre> <h2> <a id="profile_38" rel="nofollow"></a>设置profile</h2> <p>可以通过多种方式设置profile向容器中注册bean。</p> <h3> <a id="WebApplicationInitializer__42" rel="nofollow"></a>WebApplicationInitializer 接口</h3> <p>web环境中，可以通过实现WebApplicationInitializer接口配置ServletContext上下文。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Configuration</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyWebApplicationInitializer</span>    <span class="token keyword">implements</span> <span class="token class-name">WebApplicationInitializer</span> <span class="token punctuation">{<!-- --></span>      <span class="token annotation punctuation">@Override</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStartup</span><span class="token punctuation">(</span><span class="token class-name">ServletContext</span> servletContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{<!-- --></span>           servletContext<span class="token punctuation">.</span><span class="token function">setInitParameter</span><span class="token punctuation">(</span>           <span class="token string">"spring.profiles.active"</span><span class="token punctuation">,</span> <span class="token string">"dev"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="ConfigurableEnvironment__60" rel="nofollow"></a>ConfigurableEnvironment 接口</h3> <p>通过ConfigurableEnvironment接口直接设置profile</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Autowired</span> <span class="token keyword">private</span> <span class="token class-name">ConfigurableEnvironment</span> env<span class="token punctuation">;</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> env<span class="token punctuation">.</span><span class="token function">setActiveProfiles</span><span class="token punctuation">(</span><span class="token string">"someProfile"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h3> <a id="Webxml_71" rel="nofollow"></a>Web.xml</h3> <p>web开发者可以在web.xml中使用context param激活profile属性</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>contextConfigLocation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>/WEB-INF/app-config.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>spring.profiles.active<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span> </code></pre> <h3> <a id="JVM__86" rel="nofollow"></a>JVM 设置</h3> <p>profiles属性也可以通过JVM系统参数设置，并在应用启动时激活相关属性</p> <pre><code class="prism language-shell"><span class="token parameter variable">-Dspring.profiles.active</span><span class="token operator">=</span>dev </code></pre> <h3> <a id="_94" rel="nofollow"></a>系统环境变量</h3> <p>Unix系统中，profiles可以通过声明系统变量来激活</p> <pre><code class="prism language-shell"><span class="token builtin class-name">export</span> <span class="token assign-left variable">spring_profiles_active</span><span class="token operator">=</span>dev </code></pre> <h3> <a id="Maven__102" rel="nofollow"></a>Maven 设置</h3> <p>Spring profiles属性通过maven配置文件声明激活。</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.profiles.active</span><span class="token punctuation">&gt;</span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.profiles.active</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>prod<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.profiles.active</span><span class="token punctuation">&gt;</span></span>prod<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.profiles.active</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">&gt;</span></span> </code></pre> <p>在编译打包时，通过以下动态参数传递，直接指定profile属性，开发不需要改动任何代码。<strong>这种方式在实际开发中经常使用，编译打包完成后，直接交付给运维团队</strong></p> <pre><code class="prism language-shell">mvn clean package <span class="token parameter variable">-Pprod</span> </code></pre> <h3> <a id="Profiles_In_Test_132" rel="nofollow"></a>Profiles In Test</h3> <p>开发测试时，使用@ActiveProfile注解指定需要激活的profile。</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@ActiveProfiles</span><span class="token punctuation">(</span><span class="token string">"dev"</span><span class="token punctuation">)</span> </code></pre> <p>目前为止，已知多种方式激活profile属性，它们的优先级，从高到低分别为：</p> <ul> <li>Context parameter in web.xml</li> <li>WebApplicationInitializer</li> <li>JVM System parameter</li> <li>Environment variable</li> <li>Maven profile</li> </ul> <h2> <a id="Profile_148" rel="nofollow"></a>默认Profile</h2> <p>如果没有指定profile，Spring激活默认的profile - <strong>default</strong>, 可以在属性文件值修改 spring.profiles.default 的值，从而修改默认profile的名字</p> <pre><code class="prism language-properties">spring.profiles.default=none </code></pre> <h2> <a id="Profiles_156" rel="nofollow"></a>获取生效的Profiles</h2> <p>Spring通过@Profile注解激活/禁止beans, 但是开发者希望获取生效的Profiles列表。有两种方式可以实现：</p> <ul> <li>使用 Environment 对象</li> <li>获取spring.profiles.active属性值</li> </ul> <h3> <a id="_Environment_163" rel="nofollow"></a>使用 Environment</h3> <p>通过注入Environment bean获取激活的profiles</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProfileManager</span> <span class="token punctuation">{<!-- --></span>     <span class="token annotation punctuation">@Autowired</span>     <span class="token keyword">private</span> <span class="token class-name">Environment</span> environment<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getActiveProfiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> profileName <span class="token operator">:</span> environment<span class="token punctuation">.</span><span class="token function">getActiveProfiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Currently active profile - "</span> <span class="token operator">+</span> profileName<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>       <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="_springprofilesactive_180" rel="nofollow"></a>使用 spring.profiles.active</h3> <p>此外，可以通过注入spring.profiles.active属性值来获取有效的profiles。</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProfileManager</span> <span class="token punctuation">{<!-- --></span>     <span class="token comment">//如果配置多个属性，则覆盖get方法 迭代出每一个有效的profile</span>     <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.profiles.active}"</span><span class="token punctuation">)</span>     <span class="token keyword">private</span> <span class="token class-name">String</span> activeProfiles<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getActiveProfiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> profileName <span class="token operator">:</span> activeProfiles<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Currently active profile - "</span> <span class="token operator">+</span> profileName<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>但是，如果应用中没有profile，上述代码，由于缺少配置将会导致应用启动失败，为了避免这种情况，可以定义个 kong的字符串作为默认值。</p> <pre><code class="prism language-java"><span class="token comment">//@Value("${spring.profiles.active}")</span> <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${spring.profiles.active:}"</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token class-name">String</span> activeProfile<span class="token punctuation">;</span> </code></pre> <h1> <a id="Spring_Boot_Profiles_206" rel="nofollow"></a>Spring Boot Profiles</h1> <p>Spring Boot 支持以上所有的功能，并增加了一些额外的特性。</p> <h2> <a id="Profiles_210" rel="nofollow"></a>设置Profiles</h2> <p>在Spring Boot 默认的配置文件 - application.properties 激活</p> <pre><code class="prism language-properties">spring.profiles.active=dev </code></pre> <p>通过启动类设置profile</p> <pre><code class="prism language-java"><span class="token comment">//setAdditionalProfiles 不是静态方法，在实际使用中需要注意</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">setAdditionalProfiles</span><span class="token punctuation">(</span><span class="token string">"dev"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>使用spring-boot-maven-plugin插件</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">&gt;</span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>     ... <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span> </code></pre> <p>执行maven命令</p> <pre><code class="prism language-shell">mvn spring-boot:run </code></pre> <h2> <a id="Profilespecific_Properties_Files_248" rel="nofollow"></a>Profile-specific Properties Files</h2> <p>Spring Boot 核心特性之一是定义了基于profile的配置文件解析规则。配置文件必须以-{profile}.properties格式命名。Spring Boot自动加载解析application.properties文件，并根据profile指定，加载特定的 -{profile}.properties 文件。</p> <p>例如，需要配置开发/生产两种数据源，名称分别为application-dev.properties、application-production.properties。</p> <p>application-production.properties使用MYSQL数据源</p> <pre><code class="prism language-properties">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver spring.datasource.url=jdbc:mysql://localhost:3306/db spring.datasource.username=root spring.datasource.password=root </code></pre> <p>application-dev.properties 使用内存数据库</p> <pre><code class="prism language-properties">spring.datasource.driver-class-name=org.h2.Driver spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1 spring.datasource.username=sa spring.datasource.password=sa </code></pre> <h2> <a id="_272" rel="nofollow"></a>单文件配置</h2> <p>为了简化不同环境的配置，开发者可以在同一个文件中定义所有属性，并使用分隔符来指定配置文件。</p> <pre><code class="prism language-properties">my.prop=used-always-in-all-profiles #--- spring.config.activate.on-profile=dev spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver spring.datasource.url=jdbc:mysql://localhost:3306/db spring.datasource.username=root spring.datasource.password=root #--- spring.config.activate.on-profile=production spring.datasource.driver-class-name=org.h2.Driver spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1 spring.datasource.username=sa spring.datasource.password=sa </code></pre> <h2> <a id="Profile_Group_292" rel="nofollow"></a>Profile Group</h2> <p>Spring Boot 2.4 添加的另一个特性 - Profile Group, 顾明思义，它允许开发者将类似的配置文件分组放置在一起。</p> <p>假设一个场景：需要为生产环境提供多个配置概要文件，例如，生产环境中的数据库proddb、调度程序的prodquartz。</p> <pre><code class="prism language-properties">spring.profiles.group.production=proddb,prodquartz </code></pre> </p></div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3208.htm">TypeScript与javascript优劣势</a></p>
                                                <p>下一个：<a href="/html/category/article-3210.htm">Nacos Config服务配置详解</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3777.htm" title="vue3+vite 实现自动导入路由+组件">vue3+vite 实现自动导入路由+组件</a></li>
                        <li class="py-2"><a href="/html/category/article-3389.htm" title="树莓派开发笔记入手研华ADVANTECH工控树莓派UNO-220套件介绍和运行系统">树莓派开发笔记入手研华ADVANTECH工控树莓派UNO-220套件介绍和运行系统</a></li>
                        <li class="py-2"><a href="/html/category/article-3377.htm" title="Android 4.0.1破坏了WebView HTML 5本地存储？">Android 4.0.1破坏了WebView HTML 5本地存储？</a></li>
                        <li class="py-2"><a href="/html/category/article-3385.htm" title="Spring事件监听机制源码解析">Spring事件监听机制源码解析</a></li>
                        <li class="py-2"><a href="/html/category/article-3394.htm" title="C++编程——C++对象模型和this指针">C++编程——C++对象模型和this指针</a></li>
                        <li class="py-2"><a href="/html/category/article-3406.htm" title="postman测试@pathvariable,@requestparam,@requestbody发送情况">postman测试@pathvariable,@requestparam,@requestbody发送情况</a></li>
                        <li class="py-2"><a href="/html/category/article-3386.htm" title="浅谈Vue下的components模板">浅谈Vue下的components模板</a></li>
                        <li class="py-2"><a href="/html/category/article-3376.htm" title="react18中react-redux状态管理的实现_React">react18中react-redux状态管理的实现_React</a></li>
                        <li class="py-2"><a href="/html/category/article-3396.htm" title="CentOS7设置固定IP地址详解">CentOS7设置固定IP地址详解</a></li>
                        <li class="py-2"><a href="/html/category/article-4089.htm" title="springboot 2.X Jar包部署到阿里云 配置SSL证书 启用HTTPS  通过域名访问">springboot 2.X Jar包部署到阿里云 配置SSL证书 启用HTTPS  通过域名访问</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">2</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>