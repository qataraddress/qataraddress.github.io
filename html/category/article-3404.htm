<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3404.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>【Spring】spring的反射机制详解 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">【Spring】spring的反射机制详解</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>一、什么是反射：<br /> （1）Java反射机制的核心是在程序运行时动态加载类并获取类的详细信息，从而操作类或对象的属性和方法。本质是JVM得到class对象之后，再通过class对象进行反编译，从而获取对象的各种信息。</p> <p>（2）Java属于先编译再运行的语言，程序中对象的类型在编译期就确定下来了，而当程序在运行时可能需要动态加载某些类，这些类因为之前用不到，所以没有被加载到JVM。通过反射，可以在运行时动态地创建对象并调用其属性，不需要提前在编译期知道运行的对象是谁。</p> <p>二、反射的原理：<br /> 下图是类的正常加载过程、反射原理与class对象：</p> <p>Class对象的由来是将.class文件读入内存，并为之创建一个Class对象。<br /><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230211/a58986c2efbd9cbcc06217f2252bf388.jpg"></p> <p>&nbsp;三、反射的优缺点：<br /> 1、优点：在运行时获得类的各种内容，进行反编译，对于Java这种先编译再运行的语言，能够让我们很方便的创建灵活的代码，这些代码可以在运行时装配，无需在组件之间进行源代码的链接，更加容易实现面向对象。</p> <p>2、缺点：（1）反射会消耗一定的系统资源，因此，如果不需要动态地创建一个对象，那么就不需要用反射；</p> <p>（2）反射调用方法时可以忽略权限检查，因此可能会破坏封装性而导致安全问题。</p> <p>四、反射的用途：<br /> 1、反编译：.class--&gt;.java</p> <p>2、通过反射机制访问java对象的属性，方法，构造方法等</p> <p>3、当我们在使用IDE,比如Ecplise时，当我们输入一个对象或者类，并想调用他的属性和方法是，一按点号，编译器就会自动列出他的属性或者方法，这里就是用到反射。</p> <p>4、反射最重要的用途就是开发各种通用框架。比如很多框架（Spring）都是配置化的（比如通过XML文件配置Bean），为了保证框架的通用性，他们可能需要根据配置文件加载不同的类或者对象，调用不同的方法，这个时候就必须使用到反射了，运行时动态加载需要的加载的对象。</p> <p>5、例如，在使用Strut2框架的开发过程中，我们一般会在struts.xml里去配置Action，比如</p> <pre><code>&lt;action name="login" class="org.ScZyhSoft.test.action.SimpleLoginAction" method="execute"&gt;        &lt;result&gt;/shop/shop-index.jsp&lt;/result&gt;                &lt;result name="error"&gt;login.jsp&lt;/result&gt;        &lt;/action&gt;</code></pre> <p>&nbsp;比如我们请求login.action时，那么StrutsPrepareAndExecuteFilter就会去解析struts.xml文件，从action中查找出name为login的Action，并根据class属性创建SimpleLoginAction实例，并用Invoke方法来调用execute方法，这个过程离不开反射。配置文件与Action建立了一种映射关系，当View层发出请求时，请求会被StrutsPrepareAndExecuteFilter拦截，然后StrutsPrepareAndExecuteFilter会去动态地创建Action实例。</p> <p>比如，加载数据库驱动的，用到的也是反射。</p> <pre><code>Class.forName("com.mysql.jdbc.Driver"); // 动态加载mysql驱动</code></pre> <p>五、反射机制常用的类：<br /> Java.lang.Class;</p> <p>Java.lang.reflect.Constructor;</p> <p>Java.lang.reflect.Field;</p> <p>Java.lang.reflect.Method;</p> <p>Java.lang.reflect.Modifier;</p> <p>六、反射的基本使用：<br /> 1、获得Class：主要有三种方法：</p> <p>（1）Object--&gt;getClass</p> <p>（2）任何数据类型（包括基本的数据类型）都有一个“静态”的class属性</p> <p>（3）通过class类的静态方法：forName(String className)（最常用）</p> <pre><code>package fanshe;   public class Fanshe { 	public static void main(String[] args) { 		//第一种方式获取Class对象   		Student stu1 = new Student();//这一new 产生一个Student对象，一个Class对象。 		Class stuClass = stu1.getClass();//获取Class对象 		System.out.println(stuClass.getName()); 		 		//第二种方式获取Class对象 		Class stuClass2 = Student.class; 		System.out.println(stuClass == stuClass2);//判断第一种方式获取的Class对象和第二种方式获取的是否是同一个 		 		//第三种方式获取Class对象 		try { 			Class stuClass3 = Class.forName("fanshe.Student");//注意此字符串必须是真实路径，就是带包名的类路径，包名.类名 			System.out.println(stuClass3 == stuClass2);//判断三种方式是否获取的是同一个Class对象 		} catch (ClassNotFoundException e) { 			e.printStackTrace(); 		} 		 	} } </code></pre> <p>&nbsp;注意，在运行期间，一个类，只有一个Class对象产生，所以打印结果都是true；</p> <p>三种方式中，常用第三种，第一种对象都有了还要反射干什么，第二种需要导入类包，依赖太强，不导包就抛编译错误。一般都使用第三种，一个字符串可以传入也可以写在配置文件中等多种方法。</p> <p>2、判断是否为某个类的示例：</p> <p>一般的，我们使用instanceof 关键字来判断是否为某个类的实例。同时我们也可以借助反射中Class对象的isInstance()方法来判断时候为某个类的实例，他是一个native方法。</p> <pre><code>public native boolean isInstance(Object obj);</code></pre> <p><strong>3、创建实例：通过反射来生成对象主要有两种方法：</strong></p> <p>（1）使用Class对象的newInstance()方法来创建Class对象对应类的实例。</p> <pre><code>Class&lt;?&gt; c = String.class; Object str = c.newInstance();</code></pre> <p>（2）先通过Class对象获取指定的Constructor对象，再调用Constructor对象的newInstance()方法来创建对象，这种方法可以用指定的构造器构造类的实例。</p> <pre><code>//获取String的Class对象 Class&lt;?&gt; str = String.class; //通过Class对象获取指定的Constructor构造器对象 Constructor constructor=c.getConstructor(String.class); //根据构造器创建实例： Object obj = constructor.newInstance(“hello reflection”);</code></pre> <p>4、通过反射获取构造方法并使用：</p> <p>（1）批量获取的方法：<br /> public Constructor[] getConstructors()：所有"公有的"构造方法<br /> public Constructor[] getDeclaredConstructors()：获取所有的构造方法(包括私有、受保护、默认、公有)</p> <p>（2）单个获取的方法，并调用：<br /> public Constructor getConstructor(Class... parameterTypes):获取单个的"公有的"构造方法：<br /> public Constructor getDeclaredConstructor(Class... parameterTypes):获取"某个构造方法"可以是私有的，或受保护、默认、公有；</p> <p>（3） 调用构造方法：</p> <p>Constructor--&gt;newInstance(Object... initargs)</p> <p>newInstance是 Constructor类的方法（管理构造函数的类）</p> <p>api的解释为：newInstance(Object... initargs) ，使用此 Constructor 对象表示的构造方法来创建该构造方法的声明类的新实例，并用指定的初始化参数初始化该实例。</p> <p>它的返回值是T类型，所以newInstance是创建了一个构造方法的声明类的新实例对象，并为之调用。<br /> &nbsp;</p> </p></div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3403.htm">数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具</a></p>
                                                <p>下一个：<a href="/html/category/article-3405.htm">vue实现消息向上无缝滚动效果_vue.js_</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4390.htm" title="襄阳市养狗（襄阳市养犬）">襄阳市养狗（襄阳市养犬）</a></li>
                        <li class="py-2"><a href="/html/category/article-4536.htm" title="申请动物诊疗机构需要具备哪些条件和要求的条件（申办动物诊疗许可证的条件）">申请动物诊疗机构需要具备哪些条件和要求的条件（申办动物诊疗许可证的条件）</a></li>
                        <li class="py-2"><a href="/html/category/article-4464.htm" title="动物疫苗监管部门是哪里管的（动物疫苗由哪里监管）">动物疫苗监管部门是哪里管的（动物疫苗由哪里监管）</a></li>
                        <li class="py-2"><a href="/html/category/article-6866.htm" title="猫咪免费领养中心西安（西安有没有免费领养猫狗的机构）">猫咪免费领养中心西安（西安有没有免费领养猫狗的机构）</a></li>
                        <li class="py-2"><a href="/html/category/article-7051.htm" title="开个宠物食品加工厂要多少钱呢 开个宠物食品加工厂要多少钱呢">开个宠物食品加工厂要多少钱呢 开个宠物食品加工厂要多少钱呢</a></li>
                        <li class="py-2"><a href="/html/category/article-7188.htm" title="宠物食品加工厂手续流程图片（宠物食品加工厂手续流程图片及价格）">宠物食品加工厂手续流程图片（宠物食品加工厂手续流程图片及价格）</a></li>
                        <li class="py-2"><a href="/html/category/article-6171.htm" title="南京猫狗领养中心（南京宠物领养中心）">南京猫狗领养中心（南京宠物领养中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-5976.htm" title="发放动物疫苗简报 发放动物疫苗简报范文">发放动物疫苗简报 发放动物疫苗简报范文</a></li>
                        <li class="py-2"><a href="/html/category/article-4571.htm" title="动物疫苗防疫站上班时间表（动物疫苗厂家电话）">动物疫苗防疫站上班时间表（动物疫苗厂家电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-6591.htm" title="黔东南旅游景点大全介绍(黔东南旅游十大景点)">黔东南旅游景点大全介绍(黔东南旅游十大景点)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">8</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>