<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3187.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>适合初学者的C语言数据类型的讲解_C 语言 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">适合初学者的C语言数据类型的讲解_C 语言</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<p>之前说过写代码是为了解决生活中的问题，比如购物。</p> <p>假设我们要买一本书，它的价格是10.5，是个小数，也可以是一个整数10，它的书名是钢铁是怎样炼成的，是一组字符串，就像svli@gikvw这些，里面每个称为字符。</p> <p>我们要去用c语言来去存储这些信息呢，在c语言里面为了能够描述这些类型。</p> <p>就把小数抽象出来一个数据类型，叫浮点型</p> <p>把整数抽象出来一个数据类型，叫整型（就是上一个博客里面的int）</p> <p>把字符抽象出来一个数据类型，就叫字符</p> <blockquote> <p> 10.5 -  小数  -  浮点型<br /> 10   -  整数  -  整型<br /> A    -  字符  -  字符</p> </blockquote> <p>那么c语言里面抽象出来哪些数据类型呢？</p> <blockquote> <p>char          //字符数据类型<br />short         //短整型<br />int           //整型<br />long          //长整型<br />long long     //更长的整型<br />float         //单精度浮点数<br />double        //双精度浮点数<br />//浮点型  10.5<br />//整型    10<br />//字符    A</p> </blockquote> <p>看了上面的数据类型，很容易看出来下面的关系：</p> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/208d0adae18afd3b3da17e2f1c32b265.jpg"></p> <p>为什么叫浮点数？</p> <p>就像66.6和6.66*10，小数点是可以浮动的，所以叫浮点数</p> <p>那么，为什么会有上面这么多的类型呢？我们就需要先回答一下下面这个问题：</p> <p>每一种类型的大小是多少？</p> <p>我们等一下用代码问一下他们各自的大小</p> <p>先了解一下新的东西</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {  printf("%d\n",100)//  return 0;}  </pre> </div> <p>这个%d指的是打印（输出）的格式，即整型，后面的100是返回值，即打印的是100，\n的意思就像enter，空行的意思，如图：</p> <p>运行结果：</p> <blockquote> <p>100</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/38e35c1cbde94b665a6dc558ba6a0ad5.jpg"></p> <p>现在来解释一下\n的作用，这里用两组代码来对比一下：</p> <p>第一组</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {  printf("%d\n",100)//  printf("%d\n",100)  printf("%d\n",100)  return 0;}  </pre> </div> <p>运行的结果：</p> <blockquote> <p>100</p> <p>100</p> <p>100</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/1846e408e7ec000c2cb7df946a66818f.jpg"></p> <p>第二组</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {  printf("%d",100)//  printf("%d",100)  printf("%d",100)  return 0;}  </pre> </div> <p>运行的结果：</p> <blockquote> <p>100100100</p> </blockquote> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/863f53e9f2a351302addf285493cf45a.jpg"></p> <p>可以看出，\n的作用就是空一行，就是平时enter的作用</p> <p>接下来就是</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;    int main()  {      printf("%d ", sizeof(char));  	printf("%d ", sizeof(short));  	printf("%d ", sizeof(int));  	printf("%d ", sizeof(long));  	printf("%d ", sizeof(long long));  	printf("%d ", sizeof(float));  	printf("%d ", sizeof(double));      return 0;  }  </pre> </div> <p>运行结果：</p> <blockquote> <p>1 2 4 4 8 4 8</p> </blockquote> <p>（那么这些数字的含义是什么？它们又是怎么来看出所占内存的大小呢？我们等一会儿就来解释。）</p> <p style="text-align:center"><img decoding="async" alt="请添加图片描述" src="http://img.555519.xyz/uploads3/20220419/d2fe784c014904aa84fa6969a8666ed8.jpg"></p> <p>这里的sizeof()的作用就是返回数据类型中的char在内存中所占的大小，通俗点就是用它来告诉你char这个数据类型占多少内存</p> <p>不过这里用%d不太合适，在一些的编译器里面会报警告，我们用%zu最合适，sizeof的返回值要用%zu来打印。</p> <div class="ay1code"> <pre class="brush:cpp;">int main()  {  	printf("%zu\n", sizeof(char));  	printf("%zu\n", sizeof(short));  	printf("%zu\n", sizeof(int));  	printf("%zu\n", sizeof(long));  	printf("%zu\n", sizeof(long long));  	printf("%zu\n", sizeof(float));  	printf("%zu\n", sizeof(double));  	return 0;  }  </pre> </div> <p>结果跟上面那个图是一样的，运行结果是：</p> <blockquote> <p>1</p> <p>2</p> <p>4</p> <p>4</p> <p>8</p> <p>4</p> <p>8</p> </blockquote> <p>（我里面加了\n，所以是一排一排的）</p> <p>接着我们来讲上面那些数字的含义，</p> <p>你只看到了它们这些数字，但没有单位，其实它们都是有单位的，这里我们就来了解一下计算机的单位：</p> <p>计算机的单位从大到小就是PB，TB，GB，MB，KB，byte。就像我们平时生活中用的流量，一般开通的套餐只到GB，所以GB，MB，KB这些我们都已经很熟悉了，下面就是各单位间的换算</p> <blockquote> <p> 1Pb=1024Tb                   <br /> 1Tb=1024Gb<br /> 1Gb=1024Mb                  <br /> 1Mb=1024kb<br /> 1kb=1024byte（字节）  <br /> 1byte=8bit（比特位）</p> </blockquote> <p>看到这些，你可能对这些没有什么概念，我们再来进一步了解一下</p> <p>我们都知道计算机使用的是二进制语言，而我们生活在十进制的世界，</p> <p>来给一个空间| |，里面可以填1或0就是|1|或|0|，这就是一个bit，对应的就是灯亮和灯灭</p> <p>那么一个字节byte呢？</p> <p>|1| |0| |1| |0| |0| |1| |0| |1|占了8个空间，也就是8个bit</p> <p>10100101 对应的十进制就是 165</p> <p>一个字节能储存多大的数字呢？</p> <p>11111111 对应的十进制就是255，即最多可以储存2^8-1这么大的数</p> <p>我们可以感受到越到后面的单位大小越庞大</p> <p>解释完计算机的单位，我们就来回到上面的1 2 4 4 8 4 8，它们的单位都是字节</p> <p>char对应1字节，可以开辟一个能储存2^8-1的空间</p> <p>short对应2字节，可以开辟一个能储存2^16-1的空间</p> <p>int对应4字节，可以开辟一个能储存2^32-1的空间</p> <p>long long对应8字节，可以开辟一个能储存2^64-1的空间</p> <p>里面的float和double是来存储小数的，双精度浮点数比单精度浮点数精度要高一点，这个在以后的博客会更加深入的去讲解</p> <p>但是我们看到int和long为什么都是4呢？</p> <p>C语言规定，<code>sizeof(long)&gt;=sizeof(int)</code>就行，但不会超过<code>sizeof(long long)</code></p> <p>那么我们回到前面提出的问题，为什么要规定这样的数据类型呢，答案是节省空间：</p> <p>给你一个数2，你要把它存起来，你用了long long这个数据类型，开辟了能储存2^64-1的空间来放这个2，是不是有点大材小用了，用一个char就行了，提高空间的利用率</p> <p>接下来我们来解释一下下面的代码，来引入下一个博客讲的变量和常量</p> <div class="ay1code"> <pre class="brush:cpp;">#include&lt;stdio.h&gt;  int main()  {  int age=18;  double weight=16.5;  return 0;  }  </pre> </div> <p>int age=18;</p> <p>向内存申请一个int大小的空间，来把18这个数据放在age这个变量里面，通俗一点就是，int要了一个房间，起名为age（随便起名），把18放到了里面。</p> <p>double weight=16.5;</p> <p>这个像上面一样，double是数据类型，weight是个变量，16.5是个小数</p> <p>这些数据类型就是来定义变量的</p> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3186.htm">React18之状态批处理的使用_React</a></p>
                                                <p>下一个：<a href="/html/category/article-3188.htm">springMvc之拦截器的使用</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3408.htm" title="Springboot @Order注解正确用法">Springboot @Order注解正确用法</a></li>
                        <li class="py-2"><a href="/html/category/article-3386.htm" title="浅谈Vue下的components模板">浅谈Vue下的components模板</a></li>
                        <li class="py-2"><a href="/html/category/article-3373.htm" title="Centos7服务器上RabbitMQ单机安装_在线工具">Centos7服务器上RabbitMQ单机安装_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-3371.htm" title="浅谈Vue3中watchEffect的具体用法_vue.js">浅谈Vue3中watchEffect的具体用法_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-3400.htm" title="Mybatis 、SpringMVC、Spring 介绍及联系">Mybatis 、SpringMVC、Spring 介绍及联系</a></li>
                        <li class="py-2"><a href="/html/category/article-3380.htm" title="springboot的依赖管理和自动配置">springboot的依赖管理和自动配置</a></li>
                        <li class="py-2"><a href="/html/category/article-3387.htm" title="Node.js躬行记半吊子的可视化搭建系统">Node.js躬行记半吊子的可视化搭建系统</a></li>
                        <li class="py-2"><a href="/html/category/article-3407.htm" title="关于Windows系列密码抓取">关于Windows系列密码抓取</a></li>
                        <li class="py-2"><a href="/html/category/article-3394.htm" title="C++编程——C++对象模型和this指针">C++编程——C++对象模型和this指针</a></li>
                        <li class="py-2"><a href="/html/category/article-3399.htm" title="获取java泛型真实类型的方式">获取java泛型真实类型的方式</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>