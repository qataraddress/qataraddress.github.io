<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3261.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>微信APP支付V3版本签名 APP下单/订单查询接口Python版实现 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">微信APP支付V3版本签名 APP下单/订单查询接口Python版实现</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<h2 id="问题背景">问题背景</h2> <p>最近接入微信支付，微信官方并没有提供Python版的服务端SDK，因而只能根据文档手动实现一版，这里记录一下微信支付的整体流程、踩坑过程与最终具体实现。</p> <h2 id="微信支付app下单流程">微信支付APP下单流程</h2> <p>根据微信官方文档:<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_5_2.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/open/pay/chapter2_5_2.shtml</a><br /> 下单流程如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/6f2196b37e8631dfecd9b61a8399317b.jpg" alt="微信APP支付V3版本签名 APP下单/订单查询接口Python版实现"><br /> 和支付宝不同，微信多了一个预付单的概念，这里把APP下单实际分为四大部分，其中包含请求微信后端需要的首次签名和需要返回给APP的二次支付信息签名--<font color="red">这里踩一个小坑</font>，流程图中并没把第二次签名支付信息需要返回给APP的步骤画出来(即下面的步骤6.5)，因而一开始误以为只需要返回prepay_id给客户端，导致校验失败。<br /> 一. 对应步骤1~4，APP 请求业务后端，业务后台进行V3签名后，请求微信后端生成预付单prepay_id<br /> 二. 对应步骤5~6.5，业务后端收到微信后端返回prepay_id，将支付相关参数打包进行二次签名后返回给APP，这里相比流程图多了一个6.5--即业务后端返回签名支付信息到APP<br /> 三. 对应步骤7~18，APP收到业务后端返回签名支付信息后调起SDK发起支付请求，收到同步消息结果通知<br /> 四. 对应步骤19~22，APP查询业务后端，业务后端通过回调通知或直接查询微信后端返回最终支付结果</p> <h2 id="代码实现">代码实现</h2> <h3 id="首次签名逻辑">首次签名逻辑</h3> <p>第一次请求生成预付单号的签名文档为：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay4_0.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay4_0.shtml</a>, 共5个部分参与签名，其组成格式为：</p> <pre><code>HTTP请求方法\nURL\n请求时间戳\n请求随机串\n请求报文主体\n</code></pre> <p>对应签名代码:</p> <pre><code>class WechatPayDALBase(object):     def __init__(self, mch_appid, mchid, v3key, serial_no, client_key):         self.mch_appid = mch_appid         self.mchid = mchid         self.v3key = v3key         # serial_no可通过openssl直接获取, 例: openssl x509 -in 1900009191_20180326_cert.pem -noout -serial         self.serial_no = serial_no          with open(client_key, 'r') as ifile:             pkey = RSA.importKey(ifile.read())         self.signer = pkcs1_15.new(pkey)      def compute_sign_v3(self, method, url, body):         '''         V3签名逻辑         '''         ts = int(time.time())         nonce = self.generate_nonce()         uparts= parse_url(url)         ustr = uparts.path + ('?{}'.format(uparts.query) if uparts.query else '')         content = '{}\n{}\n{}\n{}\n{}\n'.format(method, ustr, ts, nonce, body)          digest = SHA256.new(content.encode('utf-8'))         sign_v = base64.b64encode(self.signer.sign(digest)).decode('utf-8')         sign_str = 'serial_no="{}",mchid="{}",timestamp="{}",nonce_str="{}",signature="{}"'.format(                     self.serial_no, self.mchid, ts, nonce, sign_v)         return sign_str      def make_headers_v3(self, url, headers=None, body='', method='GET'):         '''         微信支付V3版本签名header生成函数         '''         if not headers:             headers = {}         headers['Accept'] = 'application/json'         sign = self.compute_sign_v3(method, url, body)         auth_info = 'WECHATPAY2-SHA256-RSA2048 {}'.format(sign)         headers['Authorization'] = auth_info         return headers      def generate_nonce(self):         rnd = int(time.time()) + random.randint(100000, 1000000)         nonce = hashlib.md5(str(rnd).encode()).hexdigest()[:16]         return nonce</code></pre> <h3 id="二次签名逻辑">二次签名逻辑</h3> <p>由业务后端返回给APP的二次签名信息文档为：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_4.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_4.shtml</a><br /> 共4个部分参与签名，其组成格式为：</p> <pre><code>应用id\n时间戳\n随机字符串\n预支付交易会话ID\n</code></pre> <p>返回签名支付信息的对应代码：</p> <pre><code>    def get_pay_sign_info(self, prepay_id):         ts = int(time.time())         nonce = self.generate_nonce()         content = '{}\n{}\n{}\n{}\n'.format(self.mch_appid, ts, nonce, prepay_id)          digest = SHA256.new(content.encode('utf-8'))         sign_v = base64.b64encode(self.signer.sign(digest)).decode('utf-8')         return {             'appid': self.mch_appid,             'partnerid': self.mchid,             'timestamp': str(ts),             'noncestr': nonce,             'prepay_id': prepay_id,             'package': 'Sign=WXPay',             'sign': sign_v,         }</code></pre> <h3 id="业务后端查询订单详情">业务后端查询订单详情</h3> <p>文档地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_2.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_2.shtml</a><br /> 代码如下：</p> <pre><code>    def query_order(self, out_trade_no):         '''         查询指定订单信息         '''         url = f'https://api.mch.weixin.qq.com/v3/pay/transactions/out-trade-no/{out_trade_no}?mchid={self.mchid}'         headers = self.make_headers_v3(url)         rsp = requests.get(url, headers=headers)         pay_logger.info('out_trade_no:{}, rsp:{}|{}'.format(out_trade_no, rsp.status_code, rsp.text))         rdct = rsp.json()         return rdct</code></pre> <h3 id="业务后端调用app下单api">业务后端调用APP下单API</h3> <p>文档地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_1.shtml"  target="_blank" rel="nofollow">https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_2_1.shtml</a><br /> 代码如下：</p> <pre><code>    def create_order_info(self, data, callback_url):         '''         创建微信预支付订单, 注意包含两次签名过程:         首次签名用于请求微信后端获取prepay_id         二次签名信息返回客户端用于调起SDK支付         '''         url = 'https://api.mch.weixin.qq.com/v3/pay/transactions/app'         ndt = datetime.now()         out_trade_no = self.generate_partner_trade_no(ndt)         data = {             'mchid': self.mchid,             'out_trade_no': out_trade_no,             'appid': self.mch_appid,             'description': data['subject'],             'notify_url': callback_url,             'amount': {                 'currency': 'CNY',                 'total': int(data['price']),             },             'time_expire': (ndt + timedelta(minutes=5)).strftime('%Y-%m-%dT%H:%M:%S+08:00')         }         jdata = json.dumps(data, separators=[',', ':'])         headers = {'Content-Type': 'application/json'}         # 第一次签名, 直接请求微信后端         headers = self.make_headers_v3(url, headers=headers, body=jdata, method='POST')         rsp = requests.post(url, headers=headers, data=jdata)         pay_logger.info('rsp:{}|{}'.format(rsp.status_code, rsp.text))         rdct = rsp.json()         # 第二次签名, 返回给客户端调用         sign_info = self.get_pay_sign_info(rdct['prepay_id'])         return sign_info</code></pre> <h3 id="源码地址">源码地址</h3> <p>试水代码开源，把相关代码分享在了github：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/liuzhi67/wechat-pay-python"  target="_blank" rel="nofollow">https://github.com/liuzhi67/wechat-pay-python</a></p> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3260.htm">vue导入Excel数据到表格</a></p>
                                                <p>下一个：<a href="/html/category/article-3262.htm">C/C++标准格式、输入输出及main函数的作用</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3403.htm" title="数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具">数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-3422.htm" title="vue-cli项目添加骨架屏多种方式，自动生成骨架屏">vue-cli项目添加骨架屏多种方式，自动生成骨架屏</a></li>
                        <li class="py-2"><a href="/html/category/article-3392.htm" title="Python置换操作浅析(a, b=b, a)【Python】">Python置换操作浅析(a, b=b, a)【Python】</a></li>
                        <li class="py-2"><a href="/html/category/article-3751.htm" title="记一次RabbitMQ连接阻塞，全部队列不消费异常">记一次RabbitMQ连接阻塞，全部队列不消费异常</a></li>
                        <li class="py-2"><a href="/html/category/article-3402.htm" title="微信小程序自定义顶部导航栏封装">微信小程序自定义顶部导航栏封装</a></li>
                        <li class="py-2"><a href="/html/category/article-3416.htm" title="vue项目实现webpack配置代理,解决跨域问题_vue.js">vue项目实现webpack配置代理,解决跨域问题_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-3376.htm" title="react18中react-redux状态管理的实现_React">react18中react-redux状态管理的实现_React</a></li>
                        <li class="py-2"><a href="/html/category/article-3405.htm" title="vue实现消息向上无缝滚动效果_vue.js_">vue实现消息向上无缝滚动效果_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-3379.htm" title="如果我将提供NULL，将返回什么MySQL ASCII()函数？">如果我将提供NULL，将返回什么MySQL ASCII()函数？</a></li>
                        <li class="py-2"><a href="/html/category/article-3412.htm" title="sql 如何交换一个字符两侧字符的顺序_中级数据分析-SQL简单查询">sql 如何交换一个字符两侧字符的顺序_中级数据分析-SQL简单查询</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>