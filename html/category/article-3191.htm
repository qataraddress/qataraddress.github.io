<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3191.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>C语言 模拟实现strlen函数详解_C 语言 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">C语言 模拟实现strlen函数详解_C 语言</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li>前言</li> <li>一.strlen函数的介绍</li> <ul class="second_class_ul"> <li>1.strlen函数的声明</li> <li>2.strlen函数的简单运用</li> <li>3.注意事项</li> </ul> <li>二.三种实现strlen函数的方法</li> <ul class="second_class_ul"> <li>1.计数器的方法</li> <li>2.递归方法</li> <li>3.指针-指针的方法</li> </ul> </ul> </div> <p class="maodian"></p> <h2>前言</h2> <p>用C语言模拟实现strlen函数，我这里有三种方法，快来看看跟你用的方法是否是一样。</p> <p class="maodian"></p> <h2>一.strlen函数的介绍</h2> <p class="maodian"></p> <h3>1.strlen函数的声明</h3> <blockquote> <p>size_t strlen ( const char * str )；</p> </blockquote> <p>这里函数的返回值为无符号整形（size_t），传入的是一个常量char*类型的指针。</p> <p class="maodian"></p> <h3>2.strlen函数的简单运用</h3> <p>用strlen函数可以求出字符串的长度</p> <div class="ay1code"> <pre class="brush:cpp;">#include<stdio.h>  #include<string.h>  int main()  {  	char str[] = "qwerty";  	int ret = strlen(str);  	printf("字符串的长度 = %d\n", ret);  	return 0;  }</pre> </div> <p>代码运行结果</p> <p style="text-align:center"><img fetchpriority="high" decoding="async" alt="" height="195" src="http://img.555519.xyz/uploads3/20220420/25fa862329644273eed9f73778c5611a.jpg"></p> <p class="maodian"></p> <h3>3.注意事项</h3> <p>1.字符串是以 '\0' 作为结束标志，strlen函数返回的是在字符串中 '\0' 前面出现的字符个数（不包含 '\0' )。</p> <p>2.参数指向的字符串必须要以 '\0' 结束。</p> <p>如果不是以'\0'结束，输出结果将是一个随机值，例如：</p> <div class="ay1code"> <pre class="brush:cpp;">#include<stdio.h>  #include<string.h>     int main()  {  	char str[] = { 'a', 'b', 'c' };//这里没有以'\0'结束  	int ret = strlen(str);  	printf("字符串的长度 = %d\n", ret);  	return 0;  }</pre> </div> <p>代码运行结果</p> <p style="text-align:center"><img decoding="async" alt="" height="182" src="http://img.555519.xyz/uploads3/20220420/63391dc579c23a54f3aea16d975d209f.jpg"></p> <p> 其实这个代码的修改方法也很简单，例如：</p> <p>方法1</p> <div class="ay1code"> <pre class="brush:cpp;">#include<stdio.h>  #include<string.h>     int main()  {  	char str[] = { 'a', 'b', 'c', '\0'};  	int ret = strlen(str);  	printf("字符串的长度 = %d\n", ret);  	return 0;  }</pre> </div> <p>方法2（如果一个数组没存满的话后面的值默认存0，而'\0'的ASCII码值就是0）</p> <div class="ay1code"> <pre class="brush:cpp;">#include<stdio.h>  #include<string.h>     int main()  {  	char str[5] = { 'a', 'b', 'c'};  	int ret = strlen(str);  	printf("字符串的长度 = %d\n", ret);  	return 0;  }</pre> </div> <p>代码运行结果</p> <p style="text-align:center"><img decoding="async" alt="" height="180" src="http://img.555519.xyz/uploads3/20220420/f9c5aadf0ce7161c816e8f77cf7deb90.jpg"></p> <p>3.注意函数的返回值为size_t，是无符号的整形（ 易错 ）</p> <div class="ay1code"> <pre class="brush:cpp;">#include<stdio.h>  #include<string.h>     int main()  {  	if (strlen("abc") - strlen("abcdefg") > 0)  	{  		printf(">\n");  	}  	else  	{  		printf("<=\n");  	}  	return 0;  }</pre> </div> <p>运行结果</p> <p style="text-align:center"><img loading="lazy" decoding="async" alt="" height="188" src="http://img.555519.xyz/uploads3/20220420/423f03e2eae9b4c1c8d5caa925bdba63.jpg"></p> <p>出现这个>符号的结果的原因就在于函数的返回值为size_t，是无符号的整形，两个无符号整形的数字相减得到的还是一个无符号整形，虽然这两个字符串长度相减得到的是-3，但是编译器会把他当成无符号的整形，把-3当成无符号整形将会是一个很大的正整数，所以输出的结果是>符号。（这是一个易错点）</p> <p class="maodian"></p> <h2>二.三种实现strlen函数的方法</h2> <p>三个方法的共同点：</p> <p>1.都要用const修饰指针，因为传址进来后只需要判断这字符串的长度，并不需要修改字符串的值，所以要用const修饰，这样使其更安全。</p> <p>2.都要用assert断言，断言传来的指针不能为空指针，因为空指针是不能被访问的。</p> <p class="maodian"></p> <h3>1.计数器的方法</h3> <p>这是最普通的方法，创建一个计数器变量，然后就开始找'\0'，每经过一个字符，计数器就+1，直到找到'\0'为止。最后将计数器的值返回。</p> <div class="ay1code"> <pre class="brush:cpp;">#include<stdio.h>  #include     size_t my_strlen(const char* str)  {  	assert(str != NULL);//判断传入的指针是否为空指针  	int count = 0;//创建一个计数器变量，记录字符串的长度  	while (*str) //当找到'\0'的时候循环结束  	{                                                                                                                                                                                                                                                                                                                                                                                		count++;//记录字符串的长度  		str++;  	}  	return count;  }  int main()  {  	char str[] = "qwerty";  	int ret = my_strlen(str);  	printf("%d", ret);  	return 0;  }</pre> </div> <p class="maodian"><a name="_lab2_2_4" rel="nofollow"></p> <h3>2.递归方法</h3> <p>一时递归一时爽，一直递归一直爽。（讲解全在注释里面，嘻嘻）</p> <div class="ay1code"> <pre class="brush:cpp;">#include<stdio.h>  #include     size_t my_strlen(const char* str)  {  	assert(str != NULL);//判断传入的指针是否为空指针  	if (*str)//一直递归，直到找到'\0'为止  	{  		str++;  		return (1 + my_strlen(str));//递归，并返回1+记录字符串长度  	}  	return 0;  }  int main()  {  	char str[] = "qwerty";  	int ret = my_strlen(str);  	printf("%d", ret);  	return 0;  }</pre> </div> <p class="maodian"><a name="_lab2_2_5" rel="nofollow"></p> <h3>3.指针-指针的方法</h3> <p>我们都知道指针-指针的结果是他们之间元素的个数（因为这个我在指针初阶篇将过，嘻嘻），这个方法就是利用这个原理来写的。所以我们只用找到字符串首字符的地址和'\0'的地址，然后相减就可以得到字符串的长度了。</p> <div class="ay1code"> <pre class="brush:cpp;">#include<stdio.h>  #include<assert.h>     size_t my_strlen(const char* str)  {  	assert(str != NULL);//判断传入的指针是否为空指针  	const char* start = str;//创建一个存储首字符地址的指针，注意也要用const修饰，保持类型一致  	while (*str)//找'\0'的地址  	{  		str++;  	}  	return (str - start);//指针（'\0'的地址） - 指针（首字符的地址） = 中间字符的个数  }  int main()  {  	char str[] = "qwerty";  	int ret = my_strlen(str);  	printf("字符串的长度 = %d\n", ret);  	return 0;  }</pre> </div> <p>三种方法的运行结果都是一样的</p> <p style="text-align:center"><img loading="lazy" decoding="async" alt="" height="230" src="http://img.555519.xyz/uploads3/20220420/608b372923e280980b0eb18b300e1851.jpg"></p> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3190.htm">快速掌握AsyncI-新手入门</a></p>
                                                <p>下一个：<a href="/html/category/article-3192.htm">FP-growth 算法与Python实现</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4146.htm" title="python类内部成员的访问及外部访问">python类内部成员的访问及外部访问</a></li>
                        <li class="py-2"><a href="/html/category/article-3445.htm" title="基于YARN HA集群的Spark HA集群">基于YARN HA集群的Spark HA集群</a></li>
                        <li class="py-2"><a href="/html/category/article-4390.htm" title="襄阳市养狗（襄阳市养犬）">襄阳市养狗（襄阳市养犬）</a></li>
                        <li class="py-2"><a href="/html/category/article-4145.htm" title="如何在Python中中断for循环？">如何在Python中中断for循环？</a></li>
                        <li class="py-2"><a href="/html/category/article-3406.htm" title="postman测试@pathvariable,@requestparam,@requestbody发送情况">postman测试@pathvariable,@requestparam,@requestbody发送情况</a></li>
                        <li class="py-2"><a href="/html/category/article-4089.htm" title="springboot 2.X Jar包部署到阿里云 配置SSL证书 启用HTTPS  通过域名访问">springboot 2.X Jar包部署到阿里云 配置SSL证书 启用HTTPS  通过域名访问</a></li>
                        <li class="py-2"><a href="/html/category/article-3414.htm" title="ZooKeeper之Java客户端API使用—读取数据。">ZooKeeper之Java客户端API使用—读取数据。</a></li>
                        <li class="py-2"><a href="/html/category/article-3405.htm" title="vue实现消息向上无缝滚动效果_vue.js_">vue实现消息向上无缝滚动效果_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-3411.htm" title="wx.navigateTo/wx.redirectTo 不能跳转">wx.navigateTo/wx.redirectTo 不能跳转</a></li>
                        <li class="py-2"><a href="/html/category/article-4500.htm" title="汝州汝窑10大品牌(汝州汝瓷哪家好)">汝州汝窑10大品牌(汝州汝瓷哪家好)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>