<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3299.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>十个有用的自定义Vue钩子函数总结_vue.js - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">十个有用的自定义Vue钩子函数总结_vue.js</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li>useWindowResize</li> <li>useStorage</li> <li>useNetworkStatus</li> <li>useCopyToClipboard</li> <li>useTheme</li> <li>usePageVisibility</li> <li>useViewport</li> <li>useOnClickOutside</li> <li>useScrollToBottom</li> <li>useTimer</li> </ul> </div> <p>Vue 是我使用的第一个 JS 框架。可以说，Vue 是我进入JavaScript世界的第一道门之一。目前，Vue 仍然是一个很棒的框架。随着 composition API 的出现，Vue 只会有更大的发展。在这篇文章中，我将介绍 10 个有用的自定义钩子，让我们的代码更加好看。</p> <p class="maodian"></p> <h2>useWindowResize</h2> <p>这是一个基本的钩子，因为它被用在很多项目中.</p> <div class="ay1code"> <pre class="brush:js;">import { ref, onMounted, onUnmounted } from 'vue';  export function useWindowResize() {    const width = ref(window.innerWidth);    const height = ref(window.innerHeight);    const handleResize = () => {      width.value = window.innerWidth;      height.value = window.innerHeight;    }    onMounted(() => {      window.addEventListener('resize', handleResize)    });    onUnmounted(() => {      window.removeEventListener('resize', handleResize)    })    return {      width,      height    }  }</pre> </div> <p>使用就更简单了，只需要调用这个钩子就可以获得 window 的宽度和高度。</p> <div class="ay1code"> <pre class="brush:js;">setup() {      const { width, height } = useWindowResize();  }</pre> </div> <p class="maodian"></p> <h2>useStorage</h2> <p>你想通过在 session storage 或 local storage 中存储数据的值来持久化数据，并将该值绑定到视图?有了一个简单的钩子--useStorage，这将变得非常容易。我们只需要创建一个钩子来返回从存储空间得到的数据，以及一个函数来在我们想要改变数据时将其存储在存储空间。下面是我的钩子。</p> <div class="ay1code"> <pre class="brush:js;">import { ref } from 'vue';  const getItem = (key, storage) => {    let value = storage.getItem(key);    if (!value) {      return null;    }    try {      return JSON.parse(value)    } catch (error) {      return value;    }  }  export const useStorage = (key, type = 'session') => {    let storage = null;    switch (type) {      case 'session':        storage = sessionStorage;        break;      case 'local':        storage = localStorage;        break;      default:        return null;    }    const value = ref(getItem(key, storage));    const setItem = (storage) => {      return (newValue) => {        value.value = newValue;        storage.setItem(key, JSON.stringify(newValue));      }    }    return [      value,      setItem(storage)    ]  }</pre> </div> <p>在我的代码中，我使用 JSON.parse ** 和 JSON.stringify** 来格式化数据。如果你不想格式化它，你可以删除它。下面是一个如何使用这个钩子的例子。</p> <div class="ay1code"> <pre class="brush:js;">const [token, setToken] = useStorage('token');  setToken('new token');</pre> </div> <p class="maodian"></p> <h2>useNetworkStatus</h2> <p>这是一个有用的钩子，支持检查网络连接的状态。为了实现这个钩子，我们需要为事件 "在线"和 "离线"添加事件监听器。在事件中，我们只是调用一个回调函数，参数为网络状态。下面是我的代码。</p> <div class="ay1code"> <pre class="brush:js;">import { onMounted, onUnmounted } from 'vue';  export const useNetworkStatus = (callback = () => { }) => {    const updateOnlineStatus = () => {      const status = navigator.onLine ? 'online' : 'offline';      callback(status);    }    onMounted(() => {      window.addEventListener('online', updateOnlineStatus);      window.addEventListener('offline', updateOnlineStatus);    });    onUnmounted(() => {      window.removeEventListener('online', updateOnlineStatus);      window.removeEventListener('offline', updateOnlineStatus);    })  }</pre> </div> <p>调用方式：</p> <div class="ay1code"> <pre class="brush:js;">useNetworkStatus((status) => {       console.log(`Your network status is ${status}`);  }</pre> </div> <p class="maodian"></p> <h2>useCopyToClipboard</h2> <p>剪切板是一个比较常见的功能，我们也可以将它封装成 hook，代码如下所示：</p> <div class="ay1code"> <pre class="brush:js;">function copyToClipboard(text) {    let input = document.createElement('input');    input.setAttribute('value', text);    document.body.appendChild(input);    input.select();    let result = document.execCommand('copy');    document.body.removeChild(input);    return result;  }  export const useCopyToClipboard = () => {    return (text) => {      if (typeof text === "string" || typeof text == "number") {        return copyToClipboard(text);      }      return false;    }  }</pre> </div> <p>使用如下：</p> <div class="ay1code"> <pre class="brush:js;">const copyToClipboard = useCopyToClipboard();  copyToClipboard('just copy');</pre> </div> <p class="maodian"></p> <h2>useTheme</h2> <p>只是一个简短的钩子来改变网站的主题。它可以帮助我们轻松地切换网站的主题，只需用主题名称调用这个钩子。下面是一个我用来定义主题变量的CSS代码例子。</p> <div class="ay1code"> <pre class="brush:css;">html[theme="dark"] {     --color: #FFF;     --background: #333;  }  html[theme="default"], html {     --color: #333;     --background: #FFF;  }</pre> </div> <p>要改变主题，只需要做一个自定义的钩子，它返回一个函数来通过主题名称改变主题。代码如下：</p> <div class="ay1code"> <pre class="brush:js;">export const useTheme = (key = '') => {    return (theme) => {      document.documentElement.setAttribute(key, theme);    }  }</pre> </div> <p>使用如下：</p> <div class="ay1code"> <pre class="brush:js;">const changeTheme = useTheme();  changeTheme('dark');</pre> </div> <p class="maodian"></p> <h2>usePageVisibility</h2> <p>有时，当客户不专注于我们的网站时，我们需要做一些事情。要做到这一点，我们需要一些东西，让我们知道用户是否在关注。这是一个自定义的钩子。我把它叫做 PageVisibility，代码如下：</p> <div class="ay1code"> <pre class="brush:js;">import { onMounted, onUnmounted } from 'vue';  export const usePageVisibility = (callback = () => { }) => {    let hidden, visibilityChange;    if (typeof document.hidden !== "undefined") {      hidden = "hidden";      visibilityChange = "visibilitychange";    } else if (typeof document.msHidden !== "undefined") {      hidden = "msHidden";      visibilityChange = "msvisibilitychange";    } else if (typeof document.webkitHidden !== "undefined") {      hidden = "webkitHidden";      visibilityChange = "webkitvisibilitychange";    }    const handleVisibilityChange = () => {      callback(document[hidden]);    }    onMounted(() => {      document.addEventListener(visibilityChange, handleVisibilityChange, false);    });    onUnmounted(() => {      document.removeEventListener(visibilityChange, handleVisibilityChange);    });  }</pre> </div> <p>用法如下：</p> <div class="ay1code"> <pre class="brush:js;">usePageVisibility((hidden) => {     console.log(`User is${hidden ? ' not' : ''} focus your site`);  });</pre> </div> <p class="maodian"></p> <h2>useViewport</h2> <p>有时我们会用宽度来检测当前的用户设备，这样我们就可以根据设备来处理对应的内容。这种场景，我们也可以封装成一个 hook，代码如下：</p> <div class="ay1code"> <pre class="brush:js;">import { ref, onMounted, onUnmounted } from 'vue';  export const MOBILE = 'MOBILE'  export const TABLET = 'TABLET'  export const DESKTOP = 'DESKTOP'  export const useViewport = (config = {}) => {    const { mobile = null, tablet = null } = config;    let mobileWidth = mobile ? mobile : 768;    let tabletWidth = tablet ? tablet : 922;    let device = ref(getDevice(window.innerWidth));    function getDevice(width) {      if (width < mobileWidth) {        return MOBILE;      } else if (width < tabletWidth) {        return TABLET;      }      return DESKTOP;    }    const handleResize = () => {      device.value = getDevice(window.innerWidth);    }    onMounted(() => {      window.addEventListener('resize', handleResize);    });    onUnmounted(() => {      window.removeEventListener('resize', handleResize);    });    return {      device    }  }</pre> </div> <p>使用如下：</p> <div class="ay1code"> <pre class="brush:js;">const { device } = useViewport({ mobile: 700, table: 900 });</pre> </div> <p class="maodian"></p> <h2>useOnClickOutside</h2> <p>当 model 框弹出时，我们希望能点击其它区域关闭它，这个可以使用 clickOutSide，这种场景我们也可以封装成钩子，代码如下：</p> <div class="ay1code"> <pre class="brush:js;">import { onMounted, onUnmounted } from 'vue';  export const useOnClickOutside = (ref = null, callback = () => {}) => {    function handleClickOutside(event) {      if (ref.value && !ref.value.contains(event.target)) {        callback()      }    }    onMounted(() => {      document.addEventListener('mousedown', handleClickOutside);    })    onUnmounted(() => {      document.removeEventListener('mousedown', handleClickOutside);    });  }</pre> </div> <p>用法如下：</p> <div class="ay1code"> <pre class="brush:xhtml;"><template>      <div ref="container">View</div>  </template>  <script>  import { ref } from 'vue';  export default {      setup() {          const container = ref(null);          useOnClickOutside(container, () => {              console.log('Clicked outside');           })      }  }  </script></pre> </div> <p class="maodian"></p> <h2>useScrollToBottom</h2> <p>除了分页列表，加载更多(或懒惰加载)是一种友好的加载数据的方式。特别是对于移动设备，几乎所有运行在移动设备上的应用程序都在其用户界面中应用了load more。要做到这一点，我们需要检测用户滚动到列表底部，并为该事件触发一个回调。</p> <p>useScrollToBottom 是一个有用的钩子，支持你这样做。代码如下：</p> <div class="ay1code"> <pre class="brush:js;">import { onMounted, onUnmounted } from 'vue';  export const useScrollToBottom = (callback = () => { }) => {    const handleScrolling = () => {      if ((window.innerHeight + window.scrollY) >= document.body.scrollHeight) {        callback();      }    }    onMounted(() => {      window.addEventListener('scroll', handleScrolling);    });    onUnmounted(() => {      window.removeEventListener('scroll', handleScrolling);    });  }</pre> </div> <p>用法如下：</p> <div class="ay1code"> <pre class="brush:js;">useScrollToBottom(() => { console.log('Scrolled to bottom') })</pre> </div> <p class="maodian"></p> <h2>useTimer</h2> <p>useTimer 的代码比其他钩子要长一些。useTimer 支持运行一个带有一些选项的定时器，如开始、暂停/恢复、停止。要做到这一点，我们需要使用 setInterval 方法。在这里，我们需要检查定时器的暂停状态。如果定时器没有暂停，我们只需要调用一个回调函数，该函数由用户作为参数传递。为了支持用户了解该定时器当前的暂停状态，除了action useTimer之外，还要给他们一个变量 isPaused，其值为该定时器的暂停状态。代码如下：</p> <div class="ay1code"> <pre class="brush:js;">import { ref, onUnmounted } from 'vue';  export const useTimer = (callback = () => { }, step = 1000) => {    let timerVariableId = null;    let times = 0;    const isPaused = ref(false);    const stop = () => {      if (timerVariableId) {        clearInterval(timerVariableId);        timerVariableId = null;        resume();      }    }     const start = () => {      stop();      if (!timerVariableId) {        times = 0;        timerVariableId = setInterval(() => {          if (!isPaused.value) {            times++;            callback(times, step * times);          }        }, step)      }    }    const pause = () => {      isPaused.value = true;    }    const resume = () => {      isPaused.value = false;    }    onUnmounted(() => {      if (timerVariableId) {        clearInterval(timerVariableId);      }    })    return {      start,      stop,      pause,      resume,      isPaused    }  }</pre> </div> <p>用法如下：</p> <div class="ay1code"> <pre class="brush:js;">function handleTimer(round) {            roundNumber.value = round;      }  const {       start,      stop,      pause,      resume,      isPaused  } = useTimer(handleTimer);</pre> </div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3298.htm">前端开发：npm install 报错npm ERR! Cannot read property ‘extraneous‘ of undefined的解决方法</a></p>
                                                <p>下一个：<a href="/html/category/article-3300.htm">webpack 中 Module build failed (from ./node_modules/babel-loader/lib/index.js): 的错误解决</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7695.htm" title="猫抓了出血了可以不打疫苗吗猫（猫抓了一下出了点血不打疫苗可以吗）">猫抓了出血了可以不打疫苗吗猫（猫抓了一下出了点血不打疫苗可以吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-8201.htm" title="一元店货源从哪里进货（一元店进货渠道）">一元店货源从哪里进货（一元店进货渠道）</a></li>
                        <li class="py-2"><a href="/html/category/article-7004.htm" title="四六级听力耳机品牌榜(四六级考试听力耳机哪个牌子性价比高)">四六级听力耳机品牌榜(四六级考试听力耳机哪个牌子性价比高)</a></li>
                        <li class="py-2"><a href="/html/category/article-8016.htm" title="2021潮州旅游必去十大景点(潮州旅游必去八大景点)">2021潮州旅游必去十大景点(潮州旅游必去八大景点)</a></li>
                        <li class="py-2"><a href="/html/category/article-7097.htm" title="宠物粮食加工厂设备哪的好点呢视频讲解（宠物粮食加工厂设备哪的好点呢视频讲解一下）">宠物粮食加工厂设备哪的好点呢视频讲解（宠物粮食加工厂设备哪的好点呢视频讲解一下）</a></li>
                        <li class="py-2"><a href="/html/category/article-7280.htm" title="哈尔滨农业动物医院地址（哈尔滨农业动物医院地址电话）">哈尔滨农业动物医院地址（哈尔滨农业动物医院地址电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-7234.htm" title="广州宠物领养中心有哪些地方 广州宠物领养中心有哪些地方好">广州宠物领养中心有哪些地方 广州宠物领养中心有哪些地方好</a></li>
                        <li class="py-2"><a href="/html/category/article-8154.htm" title="太极雷雷全名叫啥（不要告诉别人）太极雷雷真名，cctv第一剧场，雷雷，">太极雷雷全名叫啥（不要告诉别人）太极雷雷真名，cctv第一剧场，雷雷，</a></li>
                        <li class="py-2"><a href="/html/category/article-8063.htm" title="新手怎么联系厂家进货电话号（怎样联系厂家拿到最便宜的货）">新手怎么联系厂家进货电话号（怎样联系厂家拿到最便宜的货）</a></li>
                        <li class="py-2"><a href="/html/category/article-7924.htm" title="聊城宠物用品批发市场地址电话（聊城哪里有宠物大市场!）">聊城宠物用品批发市场地址电话（聊城哪里有宠物大市场!）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">52</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>