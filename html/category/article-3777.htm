<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3777.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>vue3+vite 实现自动导入路由+组件 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">vue3+vite 实现自动导入路由+组件</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h3> <a id="routerjs_0" rel="nofollow"></a>router.js文件</h3> <pre><code class="prism language-js"><span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span>createRouter<span class="token punctuation">,</span> createWebHistory<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span>  <span class="token keyword">let</span> _Vue <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>install<span class="token punctuation">.</span>installed <span class="token operator">&amp;&amp;</span> _Vue <span class="token operator">===</span> Vue<span class="token punctuation">)</span> <span class="token keyword">return</span>     install<span class="token punctuation">.</span>installed <span class="token operator">=</span> <span class="token boolean">true</span>     _Vue <span class="token operator">=</span> Vue      <span class="token comment">//杠+后面的字母变为大写字母并去除杠</span>     <span class="token keyword">function</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-(\w)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$<span class="token number">0</span><span class="token punctuation">,</span> $<span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> $<span class="token number">1.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>      <span class="token comment">//首字母大写</span>     <span class="token keyword">function</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>      <span class="token keyword">const</span> routerList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> childrenList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    	<span class="token comment">// vite导入文件方法</span>     <span class="token keyword">const</span> requireComponent <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">'./views/**/*.vue'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//使用文件内name值列表</span>     <span class="token keyword">const</span> useDefaultNameList <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token comment">//不全局导入列表</span>     <span class="token keyword">const</span> doNotRegisterList <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span>         <span class="token string">'Home'</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span>     <span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token comment">//自动注册</span>     <span class="token keyword">const</span> myModules <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> requireComponent<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>requireComponent<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>         <span class="token keyword">const</span> componentConfig <span class="token operator">=</span> requireComponent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">let</span> camelCaseName<span class="token punctuation">,</span> firstLetter<span class="token punctuation">,</span>             componentName <span class="token operator">=</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span><span class="token function">toCamelCase</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'./views/'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>                 <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\/</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'.vue'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>useDefaultNameList<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             camelCaseName <span class="token operator">=</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span>componentConfig<span class="token punctuation">.</span>default<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>             componentName <span class="token operator">=</span> firstLetter <span class="token operator">=</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span>camelCaseName<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>myModules<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>doNotRegisterList<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">const</span> <span class="token punctuation">{<!-- --></span>params <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> parentName <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> pathIsNullCharacter <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">}</span> <span class="token operator">=</span> componentConfig<span class="token punctuation">.</span>default<span class="token punctuation">.</span>_pageParams <span class="token operator">||</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>             <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span>                 name<span class="token operator">:</span> componentName<span class="token punctuation">,</span>                 path<span class="token operator">:</span> <span class="token operator">!</span>pathIsNullCharacter <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>parentName <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> componentName <span class="token operator">+</span> params<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                 component<span class="token operator">:</span> componentConfig<span class="token punctuation">.</span>default <span class="token operator">||</span> componentConfig<span class="token punctuation">,</span>                 children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>             <span class="token punctuation">}</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>parentName<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">delete</span> component<span class="token punctuation">.</span>children<span class="token punctuation">;</span>                 <span class="token keyword">const</span> child <span class="token operator">=</span> childrenList<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>name <span class="token operator">===</span> parentName<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     child<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>                     childrenList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>                         name<span class="token operator">:</span> parentName<span class="token punctuation">,</span>                         children<span class="token operator">:</span> <span class="token punctuation">[</span>component<span class="token punctuation">]</span>                     <span class="token punctuation">}</span><span class="token punctuation">)</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>                 routerList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>             <span class="token punctuation">}</span>             myModules<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> routerList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">let</span> parent <span class="token operator">=</span> routerList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">let</span> index <span class="token operator">=</span> childrenList<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>name <span class="token operator">===</span> parent<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">let</span> child <span class="token operator">=</span> childrenList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>             childrenList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             parent<span class="token punctuation">.</span>children <span class="token operator">=</span> child<span class="token punctuation">.</span>children<span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     <span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>         <span class="token punctuation">{<!-- --></span>             path<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>             name<span class="token operator">:</span> <span class="token string">'Home'</span><span class="token punctuation">,</span>             <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"./views/home.vue"</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token operator">...</span>routerList     <span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>         history<span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>         <span class="token comment">// history: createWebHashHistory(),</span>         routes     <span class="token punctuation">}</span><span class="token punctuation">)</span>     Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="vue_96" rel="nofollow"></a>vue页面</h3> <pre><code class="prism language-js">   <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"eventIndex"</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>asfkafjasfjafijiofj<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>router<span class="token operator">-</span>view <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"$route.path"</span> <span class="token operator">/</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"jumpPage"</span><span class="token operator">&gt;</span>继续跳啊<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span> <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{<!-- --></span>   name<span class="token operator">:</span> <span class="token string">"eventIndex"</span><span class="token punctuation">,</span>   <span class="token comment">//自动导入时需要用到的参数</span>   _pageParams<span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>   <span class="token comment">//路由需要用到的参数</span>     params<span class="token operator">:</span> <span class="token string">'/:id?/:menuId?'</span><span class="token punctuation">,</span>     <span class="token comment">//path是否是''字符串</span>     pathIsNullCharacter<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>     <span class="token comment">//父组件的名字，如果有这个参数，则是子组件</span>     parentName<span class="token operator">:</span> <span class="token string">''</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>   methods<span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>     <span class="token function">jumpPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>       <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/EventDetail'</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>   <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span> </code></pre> <h3> <a id="componentsjs_130" rel="nofollow"></a>下方为自动导入组件（components.js）</h3> <pre><code class="prism language-js"><span class="token keyword">let</span> _Vue <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>install<span class="token punctuation">.</span>installed <span class="token operator">&amp;&amp;</span> _Vue <span class="token operator">===</span> Vue<span class="token punctuation">)</span> <span class="token keyword">return</span>     install<span class="token punctuation">.</span>installed <span class="token operator">=</span> <span class="token boolean">true</span>     _Vue <span class="token operator">=</span> Vue      <span class="token comment">//杠+后面的字母变为大写字母并去除杠</span>     <span class="token keyword">function</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-(\w)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$<span class="token number">0</span><span class="token punctuation">,</span> $<span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> $<span class="token number">1.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>      <span class="token comment">//首字母大写</span>     <span class="token keyword">function</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>      <span class="token comment">//获取vue的文件名</span>     <span class="token keyword">function</span> <span class="token function">validateFileName</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\S+\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>             str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\S+\/(\w+)\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">rs<span class="token punctuation">,</span> $<span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span><span class="token function">toCamelCase</span><span class="token punctuation">(</span>$<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span> 	<span class="token comment">//vite导入组件的方法</span>     <span class="token keyword">const</span> requireComponent <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">'./**/*.vue'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//使用文件内name值列表</span>     <span class="token keyword">const</span> useDefaultNameList <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token comment">//不全局注册列表</span>     <span class="token keyword">const</span> doNotRegisterList <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token comment">//自动注册组件</span>     <span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> requireComponent<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>requireComponent<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>         <span class="token keyword">const</span> componentConfig <span class="token operator">=</span> requireComponent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">let</span> camelCaseName<span class="token punctuation">,</span> firstLetter<span class="token punctuation">,</span> componentName<span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>componentConfig<span class="token punctuation">.</span>default<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             camelCaseName <span class="token operator">=</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span>componentConfig<span class="token punctuation">.</span>default<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>             componentName <span class="token operator">=</span> firstLetter <span class="token operator">=</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span>camelCaseName<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>             componentName <span class="token operator">=</span> <span class="token function">validateFileName</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>firstLetter <span class="token operator">&amp;&amp;</span> useDefaultNameList<span class="token punctuation">[</span>firstLetter<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             componentName <span class="token operator">=</span> <span class="token function">validateFileName</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>modules<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>doNotRegisterList<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>componentName<span class="token punctuation">,</span> componentConfig<span class="token punctuation">.</span>default <span class="token operator">||</span> componentConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>             modules<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h2> <a id="mainjs_187" rel="nofollow"></a>main.js</h2> <pre><code class="prism language-js"><span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span> <span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span> <span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">'@/components/components'</span> <span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">'./my-router'</span>  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//这里使用导入组件</span> app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Components<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//这里使用导入路由</span> app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token punctuation">;</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span> </code></pre> <p>请问各位吊大的，有木有更好的方法实现自动导入路由呀！！！</p> </p></div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3752.htm">CentOS7离线安装Nginx及配置</a></p>
                                                <p>下一个：<a href="/html/category/article-3778.htm">vue 的ESlint .eslintrc.js 文件 常用配置和注释</a></p>
                                            </div>
                                        <div class="panel panel-default mt-5">
                        <div class="panel-heading">
                            <h3 class="m-0">推荐文章</h3>
                        </div>
                        <div class="panel-body">
                            <ul class="p-0 x-0">
                                                                <li class="py-2"><a href="/html/category/article-3421.htm">PHP类属性</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3393.htm">node.js &#8211; http、模块化、npm</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3387.htm">Node.js躬行记半吊子的可视化搭建系统</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3382.htm">SpringBoot + H2内置数据库</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3367.htm">tensorflow中张量、常量、变量、占位符</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3303.htm">Java-GUI编程之事件处理</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3298.htm">前端开发：npm install 报错npm ERR! Cannot read property ‘extraneous‘ of undefined的解决方法</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3285.htm">Vue中组件是什么</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3190.htm">快速掌握AsyncI-新手入门</a></li>
                                                                <li class="py-2"><a href="/html/category/article-3188.htm">springMvc之拦截器的使用</a></li>
                                                            </ul>
                        </div>
                    </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3388.htm" title="springboot的定时任务">springboot的定时任务</a></li>
                        <li class="py-2"><a href="/html/category/article-3408.htm" title="Springboot @Order注解正确用法">Springboot @Order注解正确用法</a></li>
                        <li class="py-2"><a href="/html/category/article-4089.htm" title="springboot 2.X Jar包部署到阿里云 配置SSL证书 启用HTTPS  通过域名访问">springboot 2.X Jar包部署到阿里云 配置SSL证书 启用HTTPS  通过域名访问</a></li>
                        <li class="py-2"><a href="/html/category/article-3389.htm" title="树莓派开发笔记入手研华ADVANTECH工控树莓派UNO-220套件介绍和运行系统">树莓派开发笔记入手研华ADVANTECH工控树莓派UNO-220套件介绍和运行系统</a></li>
                        <li class="py-2"><a href="/html/category/article-3407.htm" title="关于Windows系列密码抓取">关于Windows系列密码抓取</a></li>
                        <li class="py-2"><a href="/html/category/article-3385.htm" title="Spring事件监听机制源码解析">Spring事件监听机制源码解析</a></li>
                        <li class="py-2"><a href="/html/category/article-4118.htm" title="数据库上云实践：使用Ora2pg进行数据库迁移">数据库上云实践：使用Ora2pg进行数据库迁移</a></li>
                        <li class="py-2"><a href="/html/category/article-3403.htm" title="数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具">数据结构-有向无环图的拓扑排序（拓扑排序的简单应用）_在线工具</a></li>
                        <li class="py-2"><a href="/html/category/article-3778.htm" title="vue 的ESlint .eslintrc.js 文件 常用配置和注释">vue 的ESlint .eslintrc.js 文件 常用配置和注释</a></li>
                        <li class="py-2"><a href="/html/category/article-3422.htm" title="vue-cli项目添加骨架屏多种方式，自动生成骨架屏">vue-cli项目添加骨架屏多种方式，自动生成骨架屏</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>