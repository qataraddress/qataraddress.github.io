<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3213.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>MySQL 保存日期，用哪种数据类型合适？datetime？timestamp？还是 int？ - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">MySQL 保存日期，用哪种数据类型合适？datetime？timestamp？还是 int？</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="htmledit_views"> <p>日期算是我们在日常开发中经常用到的数据类型，一般来说一张表都有 createTime 和 updateTime 字段，MySQL 中针对日期也提供了很多种不同的数据类型，如：</p> <ul> <li> <p>datetime</p> </li> <li> <p>timestamp</p> </li> <li> <p>int</p> </li> </ul> <p>等等。甚至也有人直接将日期存为字符串的。</p> <p>那么到底该用哪种类型来保存日期呢？</p> <h2>1. 字符串</h2> <p>在这些类型中，首先应该排除掉的就是字符串了，很多新手小伙伴爱用字符串存储日期，但实际上这并不是一个很好的方案。</p> <p>使用字符串存储日期，第一个显而易见的问题就是无法使用 MySQL 中提供的日期函数，这会为很多查询带来不便。</p> <p>❝</p> <p>例如用户表中有一个字段 birthday，表示用户的生日，现在想要查询 2001 出生的所有用户，如果 birthday 是 日期类型，就可以使用 YEAR 函数，但是如果 birthday 是字符串类型，这个问题就不太好处理了。</p> <p>使用字符串存储日期的第二个问题就是占用空间较大，例如存储如下时间：</p> <p><code>2021-01-01 00:00:00</code></p> <ul> <li> <p>如果使用字符串，需要 19 个字节。</p> </li> <li> <p>如果使用 datetime 需要 8 个字节。</p> </li> <li> <p>如果使用 timestamp 需要 4 个字节。</p> </li> </ul> <p>所以首先排除掉字符串。</p> <h2>2. DATETIME VS TIMESTAMEP</h2> <h3>2.1 占用空间</h3> <p>DATETIME 在数据库中存储的形式为：<code>YYYY-MM-DD hh:mm:ss</code>&nbsp;，至于占用的字节数，则看情况，我们来看一段来自 MySQL 官网的内容：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220602/0527e7ce0dc9ea377b5858df240cff73.jpg"></p> <p>可以看到，MySQL5.6.4 是一个分水岭：</p> <ul> <li> <p>在 MySQL5.6.4 之前，DATETIME 固定占用 8 个字节。</p> </li> <li> <p>从 MySQL5.6.4 开始，DATETIME 类型开始支持毫秒，DATETIME(N) 中的 N 表示毫秒的精度，例如，DATETIME(6) 表示可以存储 6 位的毫秒值，那么此时，DATETIME 占用的字节数，就跟后面的毫秒数有关了，如果 DATETIME 没有详细到毫秒，那么占用 5 个字节，如果详细到毫秒了，那就看情况，根据毫秒的精度，占用不同的空间，毫秒精度小于等于 2 时，总共占用 6 个字节；毫秒精度小于等于 4 时，总共占用 7 个字节；毫秒精度小于等于 6 时，总共占用 8 个字节。</p> </li> </ul> <p>同样，由上图我们也可以看出，在 MySQL5.6.4 之前，TIMESTAMEP 固定占用 4 个字节，从 MySQL5.6.4 开始，依据毫秒的精度，TIMESTAMEP 占用的字节数介于 4 到 7 之间。</p> <p>所以无论是 TIMESTAMEP，还是 DATETIME，都是比字符串节省空间的。</p> <h3>2.2 存储范围</h3> <p>DATETIME 的存储范围介于<code>1000-01-01 00:00:00</code>&nbsp;到<code>9999-12-31 23:59:59</code>&nbsp;之间。</p> <p>TIMESTAMP 的存储范围则介于<code>1970-01-01 00:00:01</code>&nbsp;UTC 到<code>2038-01-19 03:14:07</code>&nbsp;UTC 之间。</p> <p>很明显 DATETIME 的存储范围要更大一些。</p> <h3>2.3 底层存储</h3> <p>TIMESTAMP 类型最大的优势在于自带时区属性，因为它本质上是从毫秒转化而来。如果你的业务需要对应不同的国家时区，那么类型 TIMESTAMP 是一种不错的选择，TIMESTAMP 类型字段的值会随着服务器时区的变化而变化，自动换算成相应的时间，说简单点就是在不同时区，查询到同一个条记录此字段的值会不一样。</p> <p>举个 TIMESTAMP 的使用场景例子：</p> <p>新闻类的业务，通常用户想知道这篇新闻发布时对应的自己国家时间，那么 TIMESTAMP 是一种不错的选择。</p> <p>TIMESTAMP 会随着时区的变化而自动调整，而 DATETIME 不会。</p> <p>我举个例子：假设我数据库目前的时区是<code>Asia/Shanghai</code>&nbsp;：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220602/f391267210bb460afc2c28248241f185.jpg"></p> <p>现在有一个 user 表，数据如下：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220602/7bacd845563c9c475ba31fb3a7c5a6bd.jpg"></p> <p>其中，createTime 字段是 DATETIME，而 updateTime 是 TIMESTAMP，现在我修改一下数据库时区，我们再来查看：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220602/4b6821a3ebaaf0bd7122f78bd6902dc1.jpg"></p> <p>小伙伴们可以看到，我把时区设置为东京，东京比我们快一个小时，此时 updateTime 自动变了，而 DATETIME 不变。</p> <p>时区的问题一定要谨慎，不过时区问题也并非一定要在数据库中解决，也可以在前端或者服务端用代码处理下。</p> <h3>2.4 性能比较</h3> <p>从毫秒数转换到 TIMESTAMP 并不费事，但是当要进行时区转换的时候，需要调用操作系统底层系统函数，而这个函数需要额外的加锁操作，以确保这时操作系统时区没有修改，一加锁，效率就低了。</p> <p>对于这个问题，只存在于 TIMESTAMP 中，因为 DATETIME 不存在时区转化问题。</p> <p>对于 TIMESTAMP，建议使用显式的时区，而不是操作系统时区。</p> <h2>3. int</h2> <p>字符串费空间，TIMESTAMP 和 DATETIME 如果没有吃透则总感觉乱乱的，所以也有人存时间戳，存一个 int 类型的数值，用一个时间戳来表示时间。</p> <p>用 int 保存时间的话，当我们需要进行日期排序以及按照日期范围查询的时候，就变成了普通的数字比较了，那么效率肯定是杠杠滴。</p> <p>不过 int 有一个致命的问题就是可读性太差，所以用不用 int 就要仔细斟酌看情况了。</p> <p>好啦，小伙伴们留言说说你日常开发日期用的哪种类型呢？出于什么样的考虑用了该类型？</p> </div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3212.htm">K8S+Jenkins自动化构建微服务项目</a></p>
                                                <p>下一个：<a href="/html/category/article-3214.htm">Python yield 用法</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3422.htm" title="vue-cli项目添加骨架屏多种方式，自动生成骨架屏">vue-cli项目添加骨架屏多种方式，自动生成骨架屏</a></li>
                        <li class="py-2"><a href="/html/category/article-3405.htm" title="vue实现消息向上无缝滚动效果_vue.js_">vue实现消息向上无缝滚动效果_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-3392.htm" title="Python置换操作浅析(a, b=b, a)【Python】">Python置换操作浅析(a, b=b, a)【Python】</a></li>
                        <li class="py-2"><a href="/html/category/article-3407.htm" title="关于Windows系列密码抓取">关于Windows系列密码抓取</a></li>
                        <li class="py-2"><a href="/html/category/article-3421.htm" title="PHP类属性">PHP类属性</a></li>
                        <li class="py-2"><a href="/html/category/article-3396.htm" title="CentOS7设置固定IP地址详解">CentOS7设置固定IP地址详解</a></li>
                        <li class="py-2"><a href="/html/category/article-3402.htm" title="微信小程序自定义顶部导航栏封装">微信小程序自定义顶部导航栏封装</a></li>
                        <li class="py-2"><a href="/html/category/article-4146.htm" title="python类内部成员的访问及外部访问">python类内部成员的访问及外部访问</a></li>
                        <li class="py-2"><a href="/html/category/article-4118.htm" title="数据库上云实践：使用Ora2pg进行数据库迁移">数据库上云实践：使用Ora2pg进行数据库迁移</a></li>
                        <li class="py-2"><a href="/html/category/article-3395.htm" title="关于Springcloud Sleuth分布式请求链路跟踪的使用 小结">关于Springcloud Sleuth分布式请求链路跟踪的使用 小结</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>