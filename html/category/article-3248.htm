<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3248.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Day02—Python的变量类型、变量命名、变量类型检查、变量类型转换、运算符 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">Day02—Python的变量类型、变量命名、变量类型检查、变量类型转换、运算符</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h1> Python3变量类型</h1> <blockquote> <p><strong>变量</strong>是存储在内存中的值，这就意味着在创建变量时会在内存中开辟一个空间。</p> <p>基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。</p> <p>因此，<strong>变量</strong>可以指定不同的数据类型，这些变量可以存储整数，小数或字符。</p> </blockquote> <p>Python中的数据类型很多，而且也允许我们自定义新的数据类型，我们先介绍几种常用的数据类型：</p> <ul> <li> <strong>整型(int)</strong>：Python中可以处理任意大小的整数（Python2.x中有int和long两种类型的整数，但这种区分对Python来说意义不大，因此在Python 3.x中整数只有int这一种了），而且支持二进制（如0b100，换算成十进制是4）、八进制（如0o100，换算成十进制是64）、十进制（100）和十六进制（0x100，换算成十进制是256）的表示法。</li> <li> <strong>浮点型(float)</strong>：浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，浮点数除了数学写法（如123.456）之外还支持科学计数法（如1.23456e2）。</li> <li> <strong>字符串型(String)</strong>：字符串是以单引号或双引号括起来的任意文本，比如’hello’和"hello",字符串还有原始字符串表示法、字节字符串表示法、Unicode字符串表示法，而且可以书写成多行的形式（用三个单引号或三个双引号开头，三个单引号或三个双引号结尾）。</li> <li> <strong>布尔型</strong>：布尔值只有<code>True</code>、<code>False</code>两种值，要么是<code>True</code>，要么是<code>False</code>，在Python中，可以直接用<code>True</code>、<code>False</code>表示布尔值（请注意大小写），也可以通过布尔运算计算出来（例如3< 5会产生布尔值<code>True</code>，而2 == 1会产生布尔值<code>False</code>）。</li> <li> <strong>复数型(complex)</strong>：形如3+5j，跟数学上的复数表示一样，唯一不同的是虚部的i换成了j。实际上，这个类型并不常用，大家了解一下就可以了。</li> </ul> <h1> Python变量命名规范</h1> <p>对于每个变量我们需要给它取一个名字，就如同我们每个人都有属于自己的响亮的名字一样。在Python中，变量命名需要遵循以下这些必须遵守硬性规则和强烈建议遵守的非硬性规则。</p> <h3> 硬性规则：</h3> <ol> <li>变量名由字母（广义的<code>Unicode</code>字符，不包括特殊字符）、数字和下划线构成，数字不能开头。</li> <li>变量命名严格区分大小写（大写的a和小写的A是两个不同的变量）。</li> <li>不要跟关键字（有特殊含义的单词，后面会讲到）和系统保留字（如函数、模块等的名字）冲突，如：<code>print</code>。</li> </ol> <h3> PEP 8要求：</h3> <ol> <li>用小写字母拼写，多个单词用下划线连接。</li> <li>受保护的实例属性用单个下划线开头。</li> <li>私有的实例属性用两个下划线开头。</li> </ol> <blockquote> <p>Tip：Python关键字在<code>keyword</code>模块里。</p> </blockquote> <pre><code class="prism language-python"><span class="token keyword">import</span> keyword <span class="token keyword">print</span><span class="token punctuation">(</span>keyword<span class="token punctuation">.</span>kwlist<span class="token punctuation">)</span> </code></pre> <pre><code class="prism language-python"><span class="token punctuation">[</span><span class="token string">'False'</span><span class="token punctuation">,</span> <span class="token string">'None'</span><span class="token punctuation">,</span> <span class="token string">'True'</span><span class="token punctuation">,</span> <span class="token string">'and'</span><span class="token punctuation">,</span> <span class="token string">'as'</span><span class="token punctuation">,</span> <span class="token string">'assert'</span><span class="token punctuation">,</span> <span class="token string">'break'</span><span class="token punctuation">,</span> <span class="token string">'class'</span><span class="token punctuation">,</span> <span class="token string">'continue'</span><span class="token punctuation">,</span> <span class="token string">'def'</span><span class="token punctuation">,</span> <span class="token string">'del'</span><span class="token punctuation">,</span> <span class="token string">'elif'</span><span class="token punctuation">,</span> <span class="token string">'else'</span><span class="token punctuation">,</span> <span class="token string">'except'</span><span class="token punctuation">,</span> <span class="token string">'finally'</span><span class="token punctuation">,</span> <span class="token string">'for'</span><span class="token punctuation">,</span> <span class="token string">'from'</span><span class="token punctuation">,</span> <span class="token string">'global'</span><span class="token punctuation">,</span> <span class="token string">'if'</span><span class="token punctuation">,</span> <span class="token string">'import'</span><span class="token punctuation">,</span> <span class="token string">'in'</span><span class="token punctuation">,</span> <span class="token string">'is'</span><span class="token punctuation">,</span> <span class="token string">'lambda'</span><span class="token punctuation">,</span> <span class="token string">'nonlocal'</span><span class="token punctuation">,</span> <span class="token string">'not'</span><span class="token punctuation">,</span> <span class="token string">'or'</span><span class="token punctuation">,</span> <span class="token string">'pass'</span><span class="token punctuation">,</span> <span class="token string">'raise'</span><span class="token punctuation">,</span> <span class="token string">'return'</span><span class="token punctuation">,</span> <span class="token string">'try'</span><span class="token punctuation">,</span> <span class="token string">'while'</span><span class="token punctuation">,</span> <span class="token string">'with'</span><span class="token punctuation">,</span> <span class="token string">'yield'</span><span class="token punctuation">]</span> <span class="token comment"># 上面这些关键字都不能作为变量名。</span> </code></pre> <h1> Python变量的使用</h1> <pre><code class="prism language-python"><span class="token comment"># 使用变量保存数据并进行加减乘除运算</span> a <span class="token operator">=</span> <span class="token number">321</span> b <span class="token operator">=</span> <span class="token number">12</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span>    <span class="token comment"># 333</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span>    <span class="token comment"># 309</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">*</span> b<span class="token punctuation">)</span>    <span class="token comment"># 3852</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span>    <span class="token comment"># 26.75</span> </code></pre> <ul> <li> <h3> 变量类型检查</h3> </li> </ul> <p>在Python中可以使用<code>type</code>函数对变量的类型进行检查。</p> <pre><code class="prism language-python"><span class="token comment"># 使用type()检查变量的类型</span> a <span class="token operator">=</span> <span class="token number">100</span> b <span class="token operator">=</span> <span class="token number">12.345</span> c <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">5j</span> d <span class="token operator">=</span> <span class="token string">'hello, world'</span> e <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># <class 'int'></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># <class 'float'></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># <class 'complex'></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># <class 'str'></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># <class 'bool'></span> </code></pre> <ul> <li> <h3> 变量类型转换</h3> </li> </ul> <p>可以使用Python中内置的函数对变量类型进行转换。属于显式类型转换，强制转换。<br /><code>int()</code>：将一个数值或字符串转换成整数，可以指定进制。</p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token comment"># x 输出结果为 1</span> y <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">2.8</span><span class="token punctuation">)</span> <span class="token comment"># y 输出结果为 2</span> z <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span> <span class="token comment"># z 输出结果为 3</span> </code></pre> <p><code>float()</code>：将一个字符串转换成浮点数。</p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token comment"># x 输出结果为 1.0</span> y <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token number">2.8</span><span class="token punctuation">)</span>   <span class="token comment"># y 输出结果为 2.8</span> z <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">)</span>   <span class="token comment"># z 输出结果为 3.0</span> w <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">"4.2"</span><span class="token punctuation">)</span> <span class="token comment"># w 输出结果为 4.2</span> </code></pre> <p><code>str()</code>：将指定的对象转换成字符串形式，可以指定编码。</p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token string">"s1"</span><span class="token punctuation">)</span> <span class="token comment"># x 输出结果为 's1'</span> y <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># y 输出结果为 '2'</span> z <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">3.0</span><span class="token punctuation">)</span>  <span class="token comment"># z 输出结果为 '3.0'</span> </code></pre> <p><code>chr()</code>：将整数转换成该编码对应的字符串（一个字符）。<br /><code>ord()</code>：将字符串（一个字符）转换成对应的编码（整数）。</p> <p>例：整型和字符串类型进行运算，就可以用强制类型转换来完成.</p> <pre><code class="prism language-python">num_int <span class="token operator">=</span> <span class="token number">123</span> num_str <span class="token operator">=</span> <span class="token string">"456"</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"num_int 数据类型为:"</span><span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>num_int<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"类型转换前，num_str 数据类型为:"</span><span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>num_str<span class="token punctuation">)</span><span class="token punctuation">)</span>  num_str <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>num_str<span class="token punctuation">)</span>    <span class="token comment"># 强制转换为整型</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"类型转换后，num_str 数据类型为:"</span><span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>num_str<span class="token punctuation">)</span><span class="token punctuation">)</span>  num_sum <span class="token operator">=</span> num_int <span class="token operator">+</span> num_str  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"num_int 与 num_str 相加结果为:"</span><span class="token punctuation">,</span>num_sum<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"sum 数据类型为:"</span><span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>num_sum<span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>输出结果为：</p> <pre><code class="prism language-bash">num_int 数据类型为: <span class="token operator"><</span>class <span class="token string">'int'</span><span class="token operator">></span> 类型转换前，num_str 数据类型为: <span class="token operator"><</span>class <span class="token string">'str'</span><span class="token operator">></span> 类型转换后，num_str 数据类型为: <span class="token operator"><</span>class <span class="token string">'int'</span><span class="token operator">></span> num_int 与 num_str 相加结果为: <span class="token number">579</span> <span class="token function">sum</span> 数据类型为: <span class="token operator"><</span>class <span class="token string">'int'</span><span class="token operator">></span> </code></pre> <h1> Python运算符</h1> <ul> <li> <h3> Python算术运算符</h3> </li> </ul> <table> <thead> <tr> <th>运算符</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>+ - * /</td> <td>加、减、乘、除</td> </tr> <tr> <td>%</td> <td>取模 - 返回除法的余数</td> </tr> <tr> <td>**</td> <td>幂 - 返回x的y次幂</td> </tr> <tr> <td>//</td> <td>取整除 - 向下取接近商的整数</td> </tr> </tbody> </table> <ul> <li> <h3> Python比较运算符</h3> </li> </ul> <table> <thead> <tr> <th>运算符</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>==</td> <td>等于 - 比较对象是否相等</td> </tr> <tr> <td>!=</td> <td>不等于 - 比较两个对象是否不相等</td> </tr> <tr> <td>></td> <td>大于 - 返回x是否大于y</td> </tr> <tr> <td><</td> <td>小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。注意，这些变量名的大写。</td> </tr> <tr> <td>>=</td> <td>大于等于 - 返回x是否大于等于y。</td> </tr> <tr> <td><=</td> <td>小于等于 - 返回x是否小于等于y。</td> </tr> </tbody> </table> <ul> <li> <h3> Python逻辑运算符</h3> </li> </ul> <table> <thead> <tr> <th>运算符</th> <th>逻辑表达式</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>and</td> <td>x and y</td> <td>“与” - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值。</td> </tr> <tr> <td>or</td> <td>x or y</td> <td>“或” - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。</td> </tr> <tr> <td>no</td> <td>not x</td> <td>“非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td> </tr> </tbody> </table> <ul> <li> <h3> Python成员运算符</h3> </li> </ul> <table> <thead> <tr> <th>运算符</th> <th>描述</th> <th>实例</th> </tr> </thead> <tbody> <tr> <td>in</td> <td>如果在指定的序列中找到值返回 True，否则返回 False。</td> <td>x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td> </tr> <tr> <td>not in</td> <td>如果在指定的序列中没有找到值返回 True，否则返回 False。</td> <td>x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td> </tr> </tbody> </table> <ul> <li> <h3> Python身份运算符</h3> </li> </ul> <table> <thead> <tr> <th>运算符</th> <th>描述</th> <th>实例</th> </tr> </thead> <tbody> <tr> <td>is</td> <td>is 是判断两个标识符是不是引用自一个对象</td> <td>x is y, 类似 id(x) == id(y) , 如果引用的是同一个对象则返回 True，否则返回 False</td> </tr> <tr> <td>is not</td> <td>is not 是判断两个标识符是不是引用自不同对象</td> <td>x is not y ， 类似 id(x) != id(y)。如果引用的不是同一个对象则返回结果 True，否则返回 False。</td> </tr> </tbody> </table> <pre><code class="prism language-python"><span class="token triple-quoted-string string">""" 比较运算符和逻辑运算符、成员运算符的使用 """</span> flag0 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span> flag1 <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">></span> <span class="token number">2</span> flag2 <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator"><</span> <span class="token number">1</span> flag3 <span class="token operator">=</span> flag1 <span class="token keyword">and</span> flag2 flag4 <span class="token operator">=</span> flag1 <span class="token keyword">or</span> flag2 flag5 <span class="token operator">=</span> <span class="token keyword">not</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag0 ='</span><span class="token punctuation">,</span> flag0<span class="token punctuation">)</span>    <span class="token comment"># flag0 = True</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag1 ='</span><span class="token punctuation">,</span> flag1<span class="token punctuation">)</span>    <span class="token comment"># flag1 = True</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag2 ='</span><span class="token punctuation">,</span> flag2<span class="token punctuation">)</span>    <span class="token comment"># flag2 = False</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag3 ='</span><span class="token punctuation">,</span> flag3<span class="token punctuation">)</span>    <span class="token comment"># flag3 = False</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag4 ='</span><span class="token punctuation">,</span> flag4<span class="token punctuation">)</span>    <span class="token comment"># flag4 = True</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag5 ='</span><span class="token punctuation">,</span> flag5<span class="token punctuation">)</span>    <span class="token comment"># flag5 = False</span> </code></pre> </p></div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3247.htm">CTF babyarm内核题目分析</a></p>
                                                <p>下一个：<a href="/html/category/article-3249.htm">Tensorflow 窗口时间序列数据的处理</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-4500.htm" title="汝州汝窑10大品牌(汝州汝瓷哪家好)">汝州汝窑10大品牌(汝州汝瓷哪家好)</a></li>
                        <li class="py-2"><a href="/html/category/article-4145.htm" title="如何在Python中中断for循环？">如何在Python中中断for循环？</a></li>
                        <li class="py-2"><a href="/html/category/article-4314.htm" title="活体猫运费一般要多少钱（猫活物邮费多少）">活体猫运费一般要多少钱（猫活物邮费多少）</a></li>
                        <li class="py-2"><a href="/html/category/article-3411.htm" title="wx.navigateTo/wx.redirectTo 不能跳转">wx.navigateTo/wx.redirectTo 不能跳转</a></li>
                        <li class="py-2"><a href="/html/category/article-3398.htm" title="在MySQL中，SERIAL和AUTO_INCREMENT有什么区别？">在MySQL中，SERIAL和AUTO_INCREMENT有什么区别？</a></li>
                        <li class="py-2"><a href="/html/category/article-3446.htm" title="CSS3 弹性布局弹性流（flex-flow）属性详解和实例">CSS3 弹性布局弹性流（flex-flow）属性详解和实例</a></li>
                        <li class="py-2"><a href="/html/category/article-3409.htm" title="Hyperledger Fabric 通道配置文件和容器环境变量详解">Hyperledger Fabric 通道配置文件和容器环境变量详解</a></li>
                        <li class="py-2"><a href="/html/category/article-3404.htm" title="【Spring】spring的反射机制详解">【Spring】spring的反射机制详解</a></li>
                        <li class="py-2"><a href="/html/category/article-3413.htm" title="Centos7系统离线安装nginx步骤(亲测，超详细步骤)">Centos7系统离线安装nginx步骤(亲测，超详细步骤)</a></li>
                        <li class="py-2"><a href="/html/category/article-3777.htm" title="vue3+vite 实现自动导入路由+组件">vue3+vite 实现自动导入路由+组件</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>