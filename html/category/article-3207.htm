<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3207.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">go语言实战&#8212;&#8211;28&#8212;&#8211;Gin、rest full api和mysql实现增删改查</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night"> <h2> 一 Gin、rest full api和mysql实现增删改查</h2> <h2> 1 目前架构、含义以及对项目进行go mod</h2> <p>gin_restful的项目目录。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/9fb6aac7b4e05df1db4661e393877dd5.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> <p>每个目录的意思描述：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/b5248f4d8671d1e70e67ed9ec94586aa.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> <p>对gin_restful项目进行mod处理：</p> <pre><code class="prism language-bash"><span class="token comment"># 1. 去到自己的gin_restful项目目录路径下。</span> <span class="token builtin class-name">cd</span> xxx<span class="token punctuation">\</span>gin_restful<span class="token punctuation">\</span> <span class="token comment"># 2. 如果之前以及mod init，可以删除这些文件。主要是go.mod、go.sum。</span> <span class="token function">rm</span> go.* <span class="token comment"># 3. 进行mod初始化。</span> <span class="token comment"># 注意：后面跟着的工程名gin_restful请设置成对应所在的根目录名字，否则在build时会报错。</span> go mod init gin_restful <span class="token comment"># 4. 构建，此时会自动帮你下载项目用到的第三方库。</span> go build </code></pre> <p>此时会看到程序运行起来。我们先把程序关掉。</p> <h2> 2 代码</h2> <p><strong>api/users.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> api  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token string">"fmt"</span> 	<span class="token punctuation">.</span> <span class="token string">"gin_restful/models"</span> 	<span class="token string">"net/http"</span> 	<span class="token string">"strconv"</span>  	<span class="token string">"github.com/gin-gonic/gin"</span> <span class="token punctuation">)</span>  <span class="token comment">//index</span> <span class="token keyword">func</span> <span class="token function">IndexUsers</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">"It works"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token comment">//获得所有记录</span> <span class="token keyword">func</span> <span class="token function">GetAll</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	p <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span> 	rs<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">GetRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"list"</span><span class="token punctuation">:</span> rs<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token comment">//增加一条记录</span> <span class="token keyword">func</span> <span class="token function">AddUsers</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	name <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span> 	telephone <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"telephone"</span><span class="token punctuation">)</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"name:"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"telephone:"</span><span class="token punctuation">,</span> telephone<span class="token punctuation">)</span> 	<span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">""</span> <span class="token punctuation">{<!-- --></span> 		msg <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"name字段错误"</span><span class="token punctuation">)</span> 		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 			<span class="token string">"msg"</span><span class="token punctuation">:</span> msg<span class="token punctuation">,</span> 		<span class="token punctuation">}</span><span class="token punctuation">)</span> 		<span class="token keyword">return</span> 	<span class="token punctuation">}</span> 	person <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span> 		Name<span class="token punctuation">:</span>      name<span class="token punctuation">,</span> 		Telephone<span class="token punctuation">:</span> telephone<span class="token punctuation">,</span> 	<span class="token punctuation">}</span> 	id <span class="token operator">:=</span> person<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	msg <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"insert 成功 %d"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"msg"</span><span class="token punctuation">:</span> msg<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token comment">//获得一条记录</span> <span class="token keyword">func</span> <span class="token function">GetOne</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	ids <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> 	id<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span> 	p <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span> 		Id<span class="token punctuation">:</span> id<span class="token punctuation">,</span> 	<span class="token punctuation">}</span> 	rs<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> p<span class="token punctuation">.</span><span class="token function">GetRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"result"</span><span class="token punctuation">:</span> rs<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token function">UpdateUser</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	ids <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> 	id<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span> 	telephone <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"telephone"</span><span class="token punctuation">)</span> 	person <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span> 		Id<span class="token punctuation">:</span>        id<span class="token punctuation">,</span> 		Telephone<span class="token punctuation">:</span> telephone<span class="token punctuation">,</span> 	<span class="token punctuation">}</span> 	row <span class="token operator">:=</span> person<span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	msg <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"updated successful %d"</span><span class="token punctuation">,</span> row<span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"msg"</span><span class="token punctuation">:</span> msg<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token comment">//删除一条记录</span> <span class="token keyword">func</span> <span class="token function">DelUser</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	ids <span class="token operator">:=</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">FormValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> 	id<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>ids<span class="token punctuation">)</span> 	row <span class="token operator">:=</span> <span class="token function">Delete</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> 	msg <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">"delete successful %d"</span><span class="token punctuation">,</span> row<span class="token punctuation">)</span> 	c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{<!-- --></span> 		<span class="token string">"msg"</span><span class="token punctuation">:</span> msg<span class="token punctuation">,</span> 	<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p><strong>db/mysql.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> db  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token string">"database/sql"</span> 	<span class="token string">"fmt"</span> 	<span class="token string">"log"</span>  	<span class="token boolean">_</span> <span class="token string">"github.com/go-sql-driver/mysql"</span> <span class="token punctuation">)</span>  <span class="token comment">// 全局的mysql线程池对象。</span> <span class="token keyword">var</span> SqlDB <span class="token operator">*</span>sql<span class="token punctuation">.</span>DB  <span class="token comment">// 一个包里，名字为init的函数会自动被调用。并且在main开始前被调用。如不想被自动调用可以将名字改掉。</span> <span class="token comment">// 相当于C++的static静态变量、全局变量在编译时就被初始化了。</span> <span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>  	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"sql init"</span><span class="token punctuation">)</span> <span class="token comment">// 包里的init自动调用，在main前执行。所以这句话会在main前面打印。</span>  	<span class="token keyword">var</span> err <span class="token builtin">error</span> 	SqlDB<span class="token punctuation">,</span> err <span class="token operator">=</span> sql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">"mysql"</span><span class="token punctuation">,</span> <span class="token string">"root:123456@tcp(127.0.0.1:3306)/go_test?charset=utf8mb4"</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	err <span class="token operator">=</span> SqlDB<span class="token punctuation">.</span><span class="token function">Ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	SqlDB<span class="token punctuation">.</span><span class="token function">SetMaxIdleConns</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> 	SqlDB<span class="token punctuation">.</span><span class="token function">SetMaxOpenConns</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p><strong>models/users.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> models  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token string">"gin_restful/db"</span> 	<span class="token string">"log"</span> <span class="token punctuation">)</span>  <span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{<!-- --></span>     Id <span class="token builtin">int</span> <span class="token string">`json:"id" form:"id"`</span>     Name <span class="token builtin">string</span> <span class="token string">`json:"name" form:"name"`</span>     Telephone <span class="token builtin">string</span> <span class="token string">`json:"telephone" form:"telephone"`</span> <span class="token punctuation">}</span>  <span class="token comment">//插入</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>person <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int64</span> <span class="token punctuation">{<!-- --></span>     rs<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span><span class="token string">"INSERT into users (name, telephone) value (?,?)"</span><span class="token punctuation">,</span> person<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> person<span class="token punctuation">.</span>Telephone<span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     id<span class="token punctuation">,</span> err <span class="token operator">:=</span> rs<span class="token punctuation">.</span><span class="token function">LastInsertId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span><span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> id <span class="token punctuation">}</span>  <span class="token comment">//查询一条记录</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">GetRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>person Person<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span>  <span class="token punctuation">{<!-- --></span>     person <span class="token operator">=</span> Person<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span>     err <span class="token operator">=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">QueryRow</span><span class="token punctuation">(</span><span class="token string">"select id,name,telephone from users where id = ?"</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&</span>person<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> <span class="token operator">&</span>person<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token operator">&</span>person<span class="token punctuation">.</span>Telephone<span class="token punctuation">)</span>     <span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token comment">//查询所有记录</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>person <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">GetRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>persons <span class="token punctuation">[</span><span class="token punctuation">]</span>Person<span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">"select id,name,telephone from users"</span><span class="token punctuation">)</span>     <span class="token keyword">for</span> rows<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         person <span class="token operator">:=</span> Person<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span>         err <span class="token operator">:=</span> rows<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token operator">&</span>person<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> <span class="token operator">&</span>person<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token operator">&</span>person<span class="token punctuation">.</span>Telephone<span class="token punctuation">)</span>         <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>             log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>         <span class="token punctuation">}</span>         persons <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>persons<span class="token punctuation">,</span> person<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     rows<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token comment">//修改</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>person <span class="token operator">*</span>Person<span class="token punctuation">)</span> <span class="token function">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int64</span><span class="token punctuation">{<!-- --></span>     rs<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span><span class="token string">"update users set telephone = ? where id = ?"</span><span class="token punctuation">,</span> person<span class="token punctuation">.</span>Telephone<span class="token punctuation">,</span> person<span class="token punctuation">.</span>Id<span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> rs<span class="token punctuation">.</span><span class="token function">RowsAffected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span>  rows <span class="token punctuation">}</span>  <span class="token comment">//删除一条记录</span> <span class="token keyword">func</span> <span class="token function">Delete</span><span class="token punctuation">(</span>id <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int64</span>  <span class="token punctuation">{<!-- --></span>     rs<span class="token punctuation">,</span> err <span class="token operator">:=</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Exec</span><span class="token punctuation">(</span><span class="token string">"delete from users where id = ?"</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>     rows<span class="token punctuation">,</span> err <span class="token operator">:=</span> rs<span class="token punctuation">.</span><span class="token function">RowsAffected</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span>         log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> rows <span class="token punctuation">}</span> </code></pre> <p><strong>router.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> main  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token punctuation">.</span> <span class="token string">"gin_restful/api"</span>  	<span class="token string">"github.com/gin-gonic/gin"</span> <span class="token punctuation">)</span>  <span class="token comment">// 注册路由器。</span> <span class="token keyword">func</span> <span class="token function">initRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>gin<span class="token punctuation">.</span>Engine <span class="token punctuation">{<!-- --></span> 	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> IndexUsers<span class="token punctuation">)</span> <span class="token comment">// http://192.168.1.1:8806</span>  	<span class="token comment">// 2. 设置路由群组，路由群组可以设置多个。</span> 	<span class="token comment">// 例如设置用户组与部分组等等。</span> 	users <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"api/v1/users"</span><span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		users<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> GetAll<span class="token punctuation">)</span>             <span class="token comment">// http://192.168.1.1:8806/api/v1/users</span> 		users<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/add"</span><span class="token punctuation">,</span> AddUsers<span class="token punctuation">)</span>      <span class="token comment">// http://192.168.1.1:8806/api/v1/users/add</span> 		users<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/get/:id"</span><span class="token punctuation">,</span> GetOne<span class="token punctuation">)</span>     <span class="token comment">// http://192.168.1.1:8806/api/v1/users/get/5</span> 		users<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">,</span> UpdateUser<span class="token punctuation">)</span> <span class="token comment">// http://192.168.1.1:8806/api/v1/users/update</span> 		users<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/del"</span><span class="token punctuation">,</span> DelUser<span class="token punctuation">)</span>       <span class="token comment">// http://192.168.1.1:8806/api/v1/users/del</span> 	<span class="token punctuation">}</span>  	departments <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">"api/v1/departments"</span><span class="token punctuation">)</span> 	<span class="token punctuation">{<!-- --></span> 		departments<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> GetAll<span class="token punctuation">)</span>             <span class="token comment">// http://192.168.1.1:8806/api/v1/departments</span> 		departments<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/add"</span><span class="token punctuation">,</span> AddUsers<span class="token punctuation">)</span>      <span class="token comment">// http://192.168.1.1:8806/api/v1/departments/add</span> 		departments<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">"/get/:id"</span><span class="token punctuation">,</span> GetOne<span class="token punctuation">)</span>     <span class="token comment">// http://192.168.1.1:8806/api/v1/departments/get/5</span> 		departments<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/update"</span><span class="token punctuation">,</span> UpdateUser<span class="token punctuation">)</span> <span class="token comment">// http://192.168.1.1:8806/api/v1/departments/update</span> 		departments<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">"/del"</span><span class="token punctuation">,</span> DelUser<span class="token punctuation">)</span>       <span class="token comment">// http://192.168.1.1:8806/api/v1/departments/del</span> 	<span class="token punctuation">}</span>  	<span class="token keyword">return</span> router <span class="token punctuation">}</span> </code></pre> <p><strong>main.go：</strong></p> <pre><code class="prism language-go"><span class="token keyword">package</span> main  <span class="token keyword">import</span> <span class="token punctuation">(</span> 	<span class="token string">"fmt"</span> 	<span class="token string">"gin_restful/db"</span> <span class="token punctuation">)</span>  <span class="token comment">// go mod init  xx_project</span> <span class="token comment">// go build</span> <span class="token comment">// ./xx_project</span> <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"main start"</span><span class="token punctuation">)</span>  	<span class="token comment">// 1. 初始化mysql(自动调用init)，并设置mysql的关闭函数。</span> 	<span class="token keyword">if</span> db<span class="token punctuation">.</span>SqlDB <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">defer</span> db<span class="token punctuation">.</span>SqlDB<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span>  	<span class="token comment">// 2. http服务开启前，提前注册路由器参数。</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"main 111"</span><span class="token punctuation">)</span> 	router <span class="token operator">:=</span> <span class="token function">initRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"main 222"</span><span class="token punctuation">)</span>  	<span class="token comment">// 3. 依赖返回的router，启动http服务器。</span> 	<span class="token comment">// 启动后，如果客户端请求相关api，那么会调用相关的函数进行处理。</span> 	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">":8806"</span><span class="token punctuation">)</span>  	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"main 444"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <p>为了进行演示，我们重新额外创建一个user表。<br /> 执行go_test.sql文件：</p> <pre><code class="prism language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> go_test<span class="token punctuation">;</span> <span class="token keyword">use</span> go_test<span class="token punctuation">;</span>  <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>users<span class="token punctuation">`</span> <span class="token punctuation">(</span> <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">BIGINT</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>telephone<span class="token punctuation">`</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span> </code></pre> <p>演示结果：</p> <ul> <li> <p>1）http://127.0.0.1:8806/api/v1/users。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/d9dfa0fe797b4d8acf34d90273e0bacb.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> <li> <p>2）http://127.0.0.1:8806/api/v1/users/add。注意要求是POST请求，如果使用GET请求会返回404。说明Gin当请求的方法不符合时，会返回404。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/ba16d60ea55603f4f1ff1285876f6f2c.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> <li> <p>3）http://127.0.0.1:8806/api/v1/users/get/1。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/f3763ad9d84683a86364816fbffd851c.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> <li> <p>4）http://127.0.0.1:8806/api/v1/users/update。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/9e92db7611a4c8a2ad324c8dd989e837.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> <li> <p>5）http://127.0.0.1:8806/api/v1/users/del。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/9c84845286fe990517a766a85ff5fc41.jpg" alt="go语言实战-----28-----Gin、rest full api和mysql实现增删改查"></p> </li> </ul> </div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3206.htm">使用 Eslint +  husky + lint-staged + Prettier 提高前端项目质量、统一项目代码风格</a></p>
                                                <p>下一个：<a href="/html/category/article-3208.htm">TypeScript与javascript优劣势</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7418.htm" title="合肥宠物狗领养地址（合肥宠物狗领养地址在哪里）">合肥宠物狗领养地址（合肥宠物狗领养地址在哪里）</a></li>
                        <li class="py-2"><a href="/html/category/article-6683.htm" title="令狐冲和盈盈在一起了吗（胡斐）越早知道越好，">令狐冲和盈盈在一起了吗（胡斐）越早知道越好，</a></li>
                        <li class="py-2"><a href="/html/category/article-7051.htm" title="开个宠物食品加工厂要多少钱呢 开个宠物食品加工厂要多少钱呢">开个宠物食品加工厂要多少钱呢 开个宠物食品加工厂要多少钱呢</a></li>
                        <li class="py-2"><a href="/html/category/article-7234.htm" title="广州宠物领养中心有哪些地方 广州宠物领养中心有哪些地方好">广州宠物领养中心有哪些地方 广州宠物领养中心有哪些地方好</a></li>
                        <li class="py-2"><a href="/html/category/article-6729.htm" title="可以自己买疫苗去宠物店打吗（可以自己买疫苗去宠物店打吗现在）">可以自己买疫苗去宠物店打吗（可以自己买疫苗去宠物店打吗现在）</a></li>
                        <li class="py-2"><a href="/html/category/article-7188.htm" title="宠物食品加工厂手续流程图片（宠物食品加工厂手续流程图片及价格）">宠物食品加工厂手续流程图片（宠物食品加工厂手续流程图片及价格）</a></li>
                        <li class="py-2"><a href="/html/category/article-6637.htm" title="领养宠物网 领养宠物网页设计代码">领养宠物网 领养宠物网页设计代码</a></li>
                        <li class="py-2"><a href="/html/category/article-7649.htm" title="深圳宠物疫苗多少钱一次（深圳宠物打疫苗是免费吗）">深圳宠物疫苗多少钱一次（深圳宠物打疫苗是免费吗）</a></li>
                        <li class="py-2"><a href="/html/category/article-6958.htm" title="褪黑素助睡眠哪个牌子好(褪黑素助睡眠哪个牌子好)">褪黑素助睡眠哪个牌子好(褪黑素助睡眠哪个牌子好)</a></li>
                        <li class="py-2"><a href="/html/category/article-7419.htm" title="成都宠物领养平台领养可靠吗现在怎么样（成都宠物领养网免费）">成都宠物领养平台领养可靠吗现在怎么样（成都宠物领养网免费）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>