<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3391.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>基于知名微服务框架go-micro开发gRPC应用程序 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">基于知名微服务框架go-micro开发gRPC应用程序</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<p>go-micro是golang的一个微服务框架。</p> <p>go-micro各个版本之间的兼容性问题一直被诟病，前几年go-micro更是分化出了两个分支：</p> <p>一个延续了go-micro，只不过转到了其公司CEO的个人Github仓库中，访问地址：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/asim/go-micro"  target="_blank" rel="nofollow">asim/go-micro: A Go microservices framework (github.com)</a></p> <p>一个转向了云原生方向，名字叫Micro，访问地址：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/micro/micro"  target="_blank" rel="nofollow">micro/micro: API first cloud platform (github.com)</a></p> <p>不过都还是开源的，当前的许可证都是Apache 2.0，不是某些人说的不能商用了，当然无法保证以后不会改许可证。</p> <hr/> <p>回到正文，这篇文章将介绍使用go-micro最新版本v4开发gRPC服务的方式。</p> <h1 id="1安装protoc">1、安装protoc</h1> <p>这个工具也称为proto编译器，可以用来生成各种开发语言使用proto协议的代码。</p> <p>下载地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/protocolbuffers/protobuf/releases"  target="_blank" rel="nofollow">https://github.com/protocolbuffers/protobuf/releases</a></p> <p>一般下载最新版本就行，注意要符合自己当前的操作系统。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/3a15f9dda18528d0985c519c4e907b31.jpg" alt="基于知名微服务框架go-micro开发gRPC应用程序"></p> <p>解压后里边有个<em>protoc.exe</em> ，拷贝到<em>GOPATH</em> 的 bin 目录下，我这里就是<em>C:/Users/PC-001/go/bin</em> ，PC-<em>001</em> 是登录当前操作系统的用户名，需要换成你自己的。<em>GOPATH</em> 可以通过执行<em>go env</em> 查看到。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d4da714043efb8da92632b5a395088f6.jpg" alt="基于知名微服务框架go-micro开发gRPC应用程序"></p> <p>一般都是把<em>GOPATH</em> 的<em>bin</em> 目录添加到环境变量的<em>PATH</em> 变量中，如果没有，请自行添加上。</p> <h1 id="2安装protoc的go-micro插件">2、安装protoc的go-micro插件</h1> <p>需要安装两个插件，它们用来生成 Golang 版本的 proto 协议代码和 go-micro 的 gRPC 代理代码。</p> <p>执行如下命令，会在<em>GOPATH</em> 的<em>bin</em> 目录下生成两个可执行文件：<em>protoc-gen-go.exe</em> 和<em>protoc-gen-micro.exe</em>。</p> <pre><code class="language-powershell">go install google.golang.org/protobuf/cmd/protoc-gen-go go install go-micro.dev/v4/cmd/protoc-gen-micro@v4</code></pre> <h1 id="3编写proto文件">3、编写proto文件</h1> <p>proto文件是符合Protocol Buffers语言规范的数据交换协议文件，就像以前WebService定义服务时使用的XML文件。现在一般都是用proto3了，这里创建一个名为<em>hello.proto</em> 的文件，放到项目的proto目录下：</p> <pre><code class="language-go">syntax = "proto3";  option go_package="/proto";  package Business;  service Hello {   rpc Say (SayRequest) returns (SayResponse); }  message SayResponse {   string Message = 1; }  message SayRequest {   string Name = 1; }</code></pre> <p>这个协议很简单，有个名字为Hello的服务，提供一个名字为Say的rpc方法，这个方法有输入输出，输入信息中有一个名为Name的参数，输出信息中有一个名为Message的返回值。</p> <h1 id="4生成grpc代理代码">4、生成gRPC代理代码</h1> <p>在项目根目录中执行如下命令，会在proto目录下生成两个文件：hello.pb.go 和 hello.pb.micro.go。</p> <pre><code>protoc --go_out=. --go_opt=paths=source_relative --micro_out=. --micro_opt=paths=source_relative proto/hello.proto</code></pre> <p>hello.pb.go 中是输入输出数据类型的Golang定义，hello.pb.micro.go 中是go-micro客户端和服务端的gRPC代理程序。</p> <p>也可以将文件生成到别的目录中，比如修改<em>proto</em> 文件中<em>go_package</em> 的配置为：</p> <pre><code>option go_package="/business";</code></pre> <p>然后执行下面的命令，会生成到项目下的business目录中：</p> <pre><code>protoc --go_out=.  --micro_out=. proto/hello.proto</code></pre> <p>具体这个命令还有哪些参数，可以执行<em>protoc -help</em> 去探索下，这里就不罗嗦了。</p> <h1 id="5编写grpc服务端程序">5、编写gRPC服务端程序</h1> <p>这里先上代码：</p> <pre><code class="language-go">package main  import ( 	"context" 	"fmt" 	"grpchello/proto" 	"log" 	"time"  	"github.com/asim/go-micro/plugins/server/grpc/v4" 	"go-micro.dev/v4" 	"go-micro.dev/v4/server" )  type Hello struct{}  func (s *Hello) Say(ctx context.Context, req *proto.SayRequest, rsp *proto.SayResponse) error { 	fmt.Println("request:", req.Name) 	rsp.Message = "Hello " + req.Name 	return nil }  func main() {  	grpcServer := grpc.NewServer()  	service := micro.NewService( 		micro.Server(grpcServer), 		micro.Name("grpchello.service"), 		micro.Address("0.0.0.0:8001"), 		micro.RegisterTTL(time.Second*30), 		micro.RegisterInterval(time.Second*10), 	)  	// optionally setup command line usage 	service.Init()  	// Register Handlers 	proto.RegisterHelloHandler(service.Server(), &amp;Hello{})  	// Run server 	if err := service.Run(); err != nil { 		log.Fatal(err) 	} }</code></pre> <p>整个过程如下：</p> <p>先定义一个名为 Hello 的类型，它去实现hello.pb.micro.go中生成的HelloHandler接口，也就是编写具体的业务实现。</p> <p>然后通过grpc.NewServer创建一个gRPC服务器，这里决定go-micro底层通信使用gPRC；</p> <p>然后通过micro.NewService创建一个micro服务，这里需要传入上面创建的grpc server，还要设置服务的名称、监听端口，以及保持服务健康用的TTL和上报周期。go-mico当前默认的服务发现机制是mdns，不用额外部署服务发现工具，不过一般只建议在开发环境使用，生产环境建议使用etcd；</p> <p>通过上面的步骤对服务进行一些初始化之后，再将Hello类型的实例注册到grpc server；</p> <p>最后启动服务，就可以开始接客了。</p> <p>如果直接粘贴这段代码的话，会有很多包没有引用进来，可以通过<em>go get</em> 获取这些包，也可以执行命令：<em>go mod tidy</em> 来引入需要的包。</p> <p>这里边还import了一个<em>grpchello/proto</em> ，这个是我这边项目的mod是<em>grpchello</em>，gRPC代理程序的package是proto，如果你的不一样，需要修改下。</p> <h1 id="6编写grpc客户端程序">6、编写gRPC客户端程序</h1> <p>访问gRPC服务也是通过<em>hello.pb.micro.go</em> 中生成的方法，直接上代码：</p> <pre><code class="language-go">package main  import ( 	"bufio" 	"context" 	"fmt" 	"grpchello/proto" 	"os"  	"github.com/asim/go-micro/plugins/client/grpc/v4" 	"go-micro.dev/v4" )  func main() {  	service := micro.NewService( 		micro.Client(grpc.NewClient()), 	)  	service.Init() 	client := proto.NewHelloService("grpchello.service", service.Client())  	rsp, err := client.Say(context.TODO(), &amp;proto.SayRequest{Name: "BOSSMA"}) 	if err != nil { 		fmt.Println(err) 	}  	fmt.Println(rsp)  	fmt.Println("按回车键退出程序...") 	in := bufio.NewReader(os.Stdin) 	_, _, _ = in.ReadLine() }</code></pre> <p>上面的程序使用了<em>grpc.NewClient</em> , 这决定了底层通信采用gRPC；然后再使用生成的代码<em>proto.NewHelloService</em> 创建客户端代理，这里指定的服务名字必须是服务端注册的名字；最后使用这个客户端代理调用相应的方法。</p> <h1 id="7运行程序">7、运行程序</h1> <p>可以使用<em>go run xxx.go</em> 来编译并运行程序。这里为了方便测试，先使用<em>go build</em> 将它们编译为exe，然后再双击运行。实际运行效果如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/03cbf71500c04ea9705d39f93be931c7.jpg" alt="基于知名微服务框架go-micro开发gRPC应用程序"></p> <hr/> <p>以上就是本文的主要内容了，完整代码示例已经上传到 Github：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/bosima/go-demo/tree/main/go-micro-grpc-hello"  target="_blank" rel="nofollow">https://github.com/bosima/go-demo/tree/main/go-micro-grpc-hello</a></p> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3390.htm">springcloud-的使用alibaba版&#8212;&#8212;Nacos Discovery&#8211;服务治理</a></p>
                                                <p>下一个：<a href="/html/category/article-3392.htm">Python置换操作浅析(a, b=b, a)【Python】</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3420.htm" title="mysql从服务列表里消失">mysql从服务列表里消失</a></li>
                        <li class="py-2"><a href="/html/category/article-3422.htm" title="vue-cli项目添加骨架屏多种方式，自动生成骨架屏">vue-cli项目添加骨架屏多种方式，自动生成骨架屏</a></li>
                        <li class="py-2"><a href="/html/category/article-3413.htm" title="Centos7系统离线安装nginx步骤(亲测，超详细步骤)">Centos7系统离线安装nginx步骤(亲测，超详细步骤)</a></li>
                        <li class="py-2"><a href="/html/category/article-3408.htm" title="Springboot @Order注解正确用法">Springboot @Order注解正确用法</a></li>
                        <li class="py-2"><a href="/html/category/article-3410.htm" title="innoDB如何解决幻读详解">innoDB如何解决幻读详解</a></li>
                        <li class="py-2"><a href="/html/category/article-3385.htm" title="Spring事件监听机制源码解析">Spring事件监听机制源码解析</a></li>
                        <li class="py-2"><a href="/html/category/article-3392.htm" title="Python置换操作浅析(a, b=b, a)【Python】">Python置换操作浅析(a, b=b, a)【Python】</a></li>
                        <li class="py-2"><a href="/html/category/article-3378.htm" title="Django 之视图url参数获取">Django 之视图url参数获取</a></li>
                        <li class="py-2"><a href="/html/category/article-3400.htm" title="Mybatis 、SpringMVC、Spring 介绍及联系">Mybatis 、SpringMVC、Spring 介绍及联系</a></li>
                        <li class="py-2"><a href="/html/category/article-3379.htm" title="如果我将提供NULL，将返回什么MySQL ASCII()函数？">如果我将提供NULL，将返回什么MySQL ASCII()函数？</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">56</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>