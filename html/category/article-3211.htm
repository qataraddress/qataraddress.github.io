<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3211.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Java连接MySQL数据——命令行程序 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">Java连接MySQL数据——命令行程序</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>SQL编程包括两种形式，一种是过程化编程，主要通过数据库交互式工具，通过存储过程、触发器、函数等形式的编程；另一种是嵌入式SQL编程，将SQL语句嵌入到高级开发语言，完成数据的各种操作。<br /> 命令行程序由于对外依赖的jar包少易上手，通常作为教学示例程序。我们通过命令行 程序介绍嵌入式SQL开发过程，示例开发工具选择idea。</p> <h2> 创建表</h2> <p>通过SQLyol建立表student；</p> <pre><code class="prism language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">(</span> Sno <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> Sname <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Ssex   <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  Sage   <span class="token keyword">INT</span><span class="token punctuation">,</span> Sdept <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> </code></pre> <p>插入数据：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/5ecac25ec386dbf74a4ab30246204044.jpg" alt="Java连接MySQL数据——命令行程序"></p> <h2> 创建命令行程序</h2> <p>新建一个命令行程序，打开idea工具，选择：File—>New—>Project，弹出对话框，如下图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/cf90d7e1bba977d5111308eaf55b6e3d.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 直接点击Next按钮，进入到下一个Tab页，勾选Create project from template，选择Command line App<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/9703506c6192b185f7bf7736cc7f0a55.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 点击Next进入下一个Tab页，如图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/148da70a49ed2d2bdb86700b132b7d11.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 输入项目名称，选择项目路径，书写基本包包名，基本包名一般由com+域名组成，确保其唯一性。填写完成后，点击finish按钮，完成命令行程序的创建，创建完成的页面如下图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/3647fd665972113800bd3e8927a70277.jpg" alt="Java连接MySQL数据——命令行程序"></p> <h2> 下载并导入jar包</h2> <p>下载mysql-connector-java-8.0.13.jar;下载地址,，将jar包存入本地目录。<br /> 项目中导入Jar包。点击File—>ProjectStructure 打开对话框，如下图所示<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/a51add44138dd414a5038bf56047da87.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 点击右侧“+”，选择“JARs or directories”，弹出对话框，选择刚才下载的jar包，如下图所示：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/0df2273cf5d364d4ab2937a57f925c6c.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 点击OK，完成jar包的导入，导入后就可以在工程中看到导入的jar包，如下图<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/6f8a92dfa84bf85e481315b26f1228f0.jpg" alt="Java连接MySQL数据——命令行程序"></p> <h2> 创建工具包</h2> <p>在开始练习时，就应该形成一个良好的习惯，将不同类型的类放置在不同包中，创建工具包util，用存放公共使用的工具类，这里的类一般使用静态方法。<br /> 创建数据库连接类：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/726c0daf2f2bd3d5ad16f0b4abcc67dd.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 代码如下：</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySqlConnection</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Connection con<span class="token operator">=</span>null<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> String driveName <span class="token operator">=</span><span class="token string">"com.mysql.cj.jdbc.Driver"</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> String url <span class="token operator">=</span> <span class="token string">"jdbc:mysql://127.0.0.1:3306/sl?serverTimezone=GMT%2b8"</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> String user<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> String pws<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">;</span>          <span class="token keyword">private</span>  <span class="token function">MySqlConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> Connection <span class="token function">getCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>        <span class="token keyword">if</span><span class="token punctuation">(</span>con<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>            con <span class="token operator">=</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> con<span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">private</span> <span class="token keyword">static</span> Connection <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         Connection connection <span class="token operator">=</span> null<span class="token punctuation">;</span>         <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driveName<span class="token punctuation">)</span><span class="token punctuation">;</span>             connection <span class="token operator">=</span> DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>user<span class="token punctuation">,</span>pws<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> <span class="token operator">|</span> SQLException e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> connection<span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>这里的方法使用static 修饰代表是静态方法，该方法属于类，而不是对象；<br /> 创建SQL执行包装类，完成数据库各种方法的执行，这里仅写了一个返回ResultSet方法，代码如下：</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MysqlHelp</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">public</span>  <span class="token keyword">static</span> ResultSet <span class="token function">query</span><span class="token punctuation">(</span>String sql<span class="token punctuation">)</span>  <span class="token punctuation">{<!-- --></span>         Connection con <span class="token operator">=</span> MySqlConnection<span class="token punctuation">.</span><span class="token function">getCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         ResultSet result <span class="token operator">=</span>null<span class="token punctuation">;</span>          <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>             Statement stmt <span class="token operator">=</span> con<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             result<span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> result<span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h2> 创建实体类</h2> <p>创建pojo包，在该包下创建实体类Student，实体类只包含私有属性和get、set方法，为了简单期间，增加了一个lombok包，就不需要写get、set方法。lombok jar的安装，File—>Settings ，打开对话框如下图：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/fbbb9e3bb5a6b6ffb25a29b6366b702b.jpg" alt="Java连接MySQL数据——命令行程序"><br /> 在实体类上加主解符“@Data”即可。当然也可以不用Lombok，老老实实的写get、set方法也可以，使用lombok代码如下</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Data</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> String sno<span class="token punctuation">;</span>     <span class="token keyword">private</span> String sName<span class="token punctuation">;</span>     <span class="token keyword">private</span> String sSex<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> sAge<span class="token punctuation">;</span>     <span class="token keyword">private</span> String sDept<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token function">Student</span><span class="token punctuation">(</span>String sno<span class="token punctuation">,</span>String name<span class="token punctuation">,</span> String sex<span class="token punctuation">,</span><span class="token keyword">int</span> age<span class="token punctuation">,</span>String dept<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSno</span><span class="token punctuation">(</span>sno<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSAge</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSDept</span><span class="token punctuation">(</span>dept<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setSSex</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token keyword">public</span> String <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token string">"学号："</span><span class="token operator">+</span>sno <span class="token operator">+</span><span class="token string">"姓名："</span><span class="token operator">+</span>sName<span class="token operator">+</span><span class="token string">"性别："</span><span class="token operator">+</span>sSex<span class="token operator">+</span><span class="token string">"年龄："</span><span class="token operator">+</span><span class="token string">"院系："</span><span class="token operator">+</span>sDept<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>为了演示方便，在实体类中增加了一个构造函数和字符串的输出，实体类当然完全没有这两个方法。</p> <h2> 创建持久化层</h2> <p>创建一个dao包，包中创建类StudentDao，完成数据的存取操作，代码如下</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StudentDao</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getStudentInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         String sql<span class="token operator">=</span><span class="token string">"SELECT Sno AS sno,Sname AS NAME,Ssex AS sex,Sage AS age,Sdept AS dept FROM student"</span><span class="token punctuation">;</span>          ResultSet result <span class="token operator">=</span> MysqlHelp<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token operator">!=</span>null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">try</span> <span class="token punctuation">{<!-- --></span>                     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>                     String sno <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"sno"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String name <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token keyword">int</span> age <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String dept <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"dept"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     String sex <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     Student student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>sno<span class="token punctuation">,</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> age<span class="token punctuation">,</span> dept<span class="token punctuation">)</span><span class="token punctuation">;</span>                     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>              <span class="token punctuation">}</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <p>这里调用了上面定义的 MysqlHelp的query方法，完成数据的存取及结构化数据向面向对象实体类的转换。</p> <h2> 业务层调用</h2> <p>打开main函数，写入下代码，完成dao层方法调用</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{<!-- --></span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         StudentDao student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StudentDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         student<span class="token punctuation">.</span><span class="token function">getStudentInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>执行结果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230217/93d1f37654b8cb4fda532a28c969f206.jpg" alt="Java连接MySQL数据——命令行程序"></p> <h2> 总结</h2> <p>在这里尽量使用面向对象的封装技术，将每个类的职责单一化，而不是把所有代码写到一起的做法，尽管写到一起，代码更好读，而且简单。另外思考一个问题，我们能不能把结构化的数据自动转换为实体对象，以及数据库的连接、SQL的执行交给第三方的程序去做，简化我们的代码？答案是肯定的，Mybaits、hibernet就是完成这些工作的框架</p> </p></div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3210.htm">Nacos Config服务配置详解</a></p>
                                                <p>下一个：<a href="/html/category/article-3212.htm">K8S+Jenkins自动化构建微服务项目</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-7096.htm" title="哈尔滨农大动物医院电话号码（哈尔滨农大兽医院电话）">哈尔滨农大动物医院电话号码（哈尔滨农大兽医院电话）</a></li>
                        <li class="py-2"><a href="/html/category/article-7097.htm" title="宠物粮食加工厂设备哪的好点呢视频讲解（宠物粮食加工厂设备哪的好点呢视频讲解一下）">宠物粮食加工厂设备哪的好点呢视频讲解（宠物粮食加工厂设备哪的好点呢视频讲解一下）</a></li>
                        <li class="py-2"><a href="/html/category/article-6959.htm" title="申贤俊老婆图片（这都可以）申贤俊老婆结婚照，演员阳光，申贤俊，">申贤俊老婆图片（这都可以）申贤俊老婆结婚照，演员阳光，申贤俊，</a></li>
                        <li class="py-2"><a href="/html/category/article-7188.htm" title="宠物食品加工厂手续流程图片（宠物食品加工厂手续流程图片及价格）">宠物食品加工厂手续流程图片（宠物食品加工厂手续流程图片及价格）</a></li>
                        <li class="py-2"><a href="/html/category/article-7234.htm" title="广州宠物领养中心有哪些地方 广州宠物领养中心有哪些地方好">广州宠物领养中心有哪些地方 广州宠物领养中心有哪些地方好</a></li>
                        <li class="py-2"><a href="/html/category/article-6171.htm" title="南京猫狗领养中心（南京宠物领养中心）">南京猫狗领养中心（南京宠物领养中心）</a></li>
                        <li class="py-2"><a href="/html/category/article-7142.htm" title="鹌鹑蛋烧排骨的做法家常做法(鹌鹑蛋烧排骨的做法大全)">鹌鹑蛋烧排骨的做法家常做法(鹌鹑蛋烧排骨的做法大全)</a></li>
                        <li class="py-2"><a href="/html/category/article-6775.htm" title="宠物猫疫苗（宠物猫疫苗多久打一次）">宠物猫疫苗（宠物猫疫苗多久打一次）</a></li>
                        <li class="py-2"><a href="/html/category/article-6591.htm" title="黔东南旅游景点大全介绍(黔东南旅游十大景点)">黔东南旅游景点大全介绍(黔东南旅游十大景点)</a></li>
                        <li class="py-2"><a href="/html/category/article-6729.htm" title="可以自己买疫苗去宠物店打吗（可以自己买疫苗去宠物店打吗现在）">可以自己买疫苗去宠物店打吗（可以自己买疫苗去宠物店打吗现在）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">10</span> <a href="/html/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>