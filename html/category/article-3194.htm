<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3194.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>42. Vue组件传值-子组件通过事件调用向父组件传值 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">42. Vue组件传值-子组件通过事件调用向父组件传值</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				  			 <div id="log-box">  				<div id="catalog"><ul id="catalog-ul"> <li><i class="be be-arrowright"></i> <a href="#title-0" title="1.首先写一个子组件以及父组件的展示内容">1.首先写一个子组件以及父组件的展示内容</a></li> <li><i class="be be-arrowright"></i> <a href="#title-1" title="5.在父组件设置data参数，接收子组件传递过来的参数">5.在父组件设置data参数，接收子组件传递过来的参数</a></li> </ul><span class="log-zd"><span class="log-close"><a title="隐藏目录"><i class="be be-cross"></i><strong>目录</strong></a></span></span></div>  			</div> <div id="content_views" class="htmledit_views"> <article class="_2rhmJa" style="font-size: 16px;" rel="nofollow"> <h2>前言</h2> <p>上一篇章讲解了使用<code>props</code>将父组件的值传递到子组件中，那么子组件如果反过来传递给父组件呢？</p> <p>这就需要父组件传递事件方法，提供子组件调用，通过子组件调用父组件的函数，传入相关参数，来进行逆向传递。</p> <p>而子组件如果想要调用父组件的函数，则需要使用<code>emit</code>方法。</p> <p>官网介绍地址：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://links.jianshu.com/go?to=https%3A%2F%2Fcn.vuejs.org%2Fv2%2Fapi%2F%23vm-emit"  target="_blank" rel="nofollow">https://cn.vuejs.org/v2/api/#vm-emit</a></p> <h2>原理基本说明：子组件向父组件传值</h2> <ol> <li> <p>原理：父组件将方法的引用，传递到子组件内部，子组件在内部调用父组件传递过来的方法，同时把要发送给父组件的数据，在调用方法的时候当作参数传递进去；</p> </li> <li> <p>父组件将方法的引用传递给子组件，其中，<code>getMsg</code>是父组件中<code>methods</code>中定义的方法名称，<code>func</code>是子组件调用传递过来方法时候的方法名称。</p> <pre class="has"><code>&lt;son @func="getMsg"&gt;&lt;/son&gt;</code></pre> </li> <li> <p>子组件内部通过<code>this.$emit('方法名', 要传递的数据)</code>方式，来调用父组件中的方法，同时把数据传递给父组件使用。</p> <pre class="has"><code>&lt;div id="app"&gt;     &lt;!-- 引用父组件 --&gt;     &lt;son @func="getMsg"&gt;&lt;/son&gt;      &lt;!-- 组件模板定义 --&gt;     &lt;script type="x-template" id="son"&gt;       &lt;div&gt;         &lt;input type="button" value="向父组件传值" @click="sendMsg" /&gt;       &lt;/div&gt;     &lt;/script&gt;   &lt;/div&gt;    &lt;script&gt;     // 子组件的定义方式     Vue.component('son', {       template: '#son', // 组件模板Id       methods: {         sendMsg() { // 按钮的点击事件           this.$emit('func', 'OK'); // 调用父组件传递过来的方法，同时把数据传递出去         }       }     });      // 创建 Vue 实例，得到 ViewModel     var vm = new Vue({       el: '#app',       data: {},       methods: {         getMsg(val){ // 子组件中，通过 this.$emit() 实际调用的方法，在此进行定义           alert(val);         }       }     });   &lt;/script&gt;</code></pre> </li> </ol> <h3>具体示例</h3> <p>下面逐步写一个子组件通过事件调用向父组件传值的示例。</p> <p>需要以下步骤：</p> <ul> <li>首页编写子组件与父组件在页面展示</li> <li>编写父组件一个示例方法<code>show</code>，使用<code>v-on</code>绑定到子组件中</li> <li>在子组件中使用<code>emit</code>调用绑定下来的父组件方法，测试能否调用</li> <li>在子组件中使用<code>emit</code>传递参数到父组件中</li> </ul> <p>基本上步骤大致是这样，下面来逐步写写看。</p> <span class="directory"></span><h4 id="title-0">1.首先写一个子组件以及父组件的展示内容</h4> <div class="image-package"> <div class="image-container"> <div class="image-container-fill"></div> <div class="image-view" style="display:block;text-align:center;">     <img decoding="async" src="http://img.555519.xyz/uploads/20221230/880557c7d7b5b38895854015726a1e16.jpg" alt="42. Vue组件传值-子组件通过事件调用向父组件传值"/> </div> </p></div> <div class="image-caption">    image-20200211114459261   </div> </p></div> <p>浏览器显示如下：</p> <div class="image-package"> <div class="image-container"> <div class="image-container-fill"></div> <div class="image-view" style="display:block;text-align:center;">     <img decoding="async" src="http://img.555519.xyz/uploads/20221230/2c023a83ff25e8af39570164612fe41f.jpg" alt="42. Vue组件传值-子组件通过事件调用向父组件传值"/> </div> </p></div> <div class="image-caption">    image-20200211121058687   </div> </p></div> <h4>2.编写父组件一个示例方法<code>show</code>，使用<code>v-on</code>绑定到子组件中</h4> <div class="image-package"> <div class="image-container"> <div class="image-container-fill"></div> <div class="image-view" style="display:block;text-align:center;">     <img decoding="async" src="http://img.555519.xyz/uploads/20221230/73cda0977d652d0f13fbc92ca82788c8.jpg" alt="42. Vue组件传值-子组件通过事件调用向父组件传值"/> </div> </p></div> <div class="image-caption">    image-20200211230028054   </div> </p></div> <h4>3.在子组件中使用<code>emit</code>调用绑定下来的父组件方法，测试能否调用</h4> <div class="image-package"> <div class="image-container"> <div class="image-container-fill"></div> <div class="image-view" style="display:block;text-align:center;">     <img decoding="async" src="http://img.555519.xyz/uploads/20221230/87b40356028dd9a60b303ebb657eebb4.jpg" alt="42. Vue组件传值-子组件通过事件调用向父组件传值"/> </div> </p></div> <div class="image-caption">    image-20200211230331172   </div> </p></div> <h4>4.在子组件中使用<code>emit</code>传递参数到父组件中</h4> <div class="image-package"> <div class="image-container"> <div class="image-container-fill"></div> <div class="image-view" style="display:block;text-align:center;">     <img decoding="async" src="http://img.555519.xyz/uploads/20221230/f5c2aa6edc5747cf91e9d5a4b7945092.jpg" alt="42. Vue组件传值-子组件通过事件调用向父组件传值"/> </div> </p></div> <div class="image-caption">    image-20200211230611997   </div> </p></div> <p>好了，现在在浏览器点击来看看打印的信息，如下：</p> <div class="image-package"> <div class="image-container"> <div class="image-container-fill"></div> <div class="image-view" style="display:block;text-align:center;">     <img decoding="async" src="http://img.555519.xyz/uploads/20221230/6cc4117f1c2070647cee1949694cfc39.jpg" alt="42. Vue组件传值-子组件通过事件调用向父组件传值"/> </div> </p></div> <div class="image-caption">    image-20200211230827734   </div> </p></div> <p>那么从上面，我们看到了子组件的参数已经传递父组件中，那么可以思考一下，父组件接收到了参数之后，是否还可以传递到父组件的<code>data</code>参数么？</p> <span class="directory"></span><h4 id="title-1">5.在父组件设置data参数，接收子组件传递过来的参数</h4> <div class="image-package"> <div class="image-container"> <div class="image-container-fill"></div> <div class="image-view" style="display:block;text-align:center;">     <img decoding="async" src="http://img.555519.xyz/uploads/20221230/128558180f016006770d1bde98a3ada6.jpg" alt="42. Vue组件传值-子组件通过事件调用向父组件传值"/> </div> </p></div> <div class="image-caption">    image-20200211231222466   </div> </p></div> <p>在浏览器执行如下：</p> <div class="image-package"> <div class="image-container"> <div class="image-container-fill"></div> <div class="image-view" style="display:block;text-align:center;">     <img decoding="async" src="http://img.555519.xyz/uploads/20221230/a1cfabcd71c061c3eeb5a82329187809.jpg" alt="42. Vue组件传值-子组件通过事件调用向父组件传值"/> </div> </p></div> <div class="image-caption">    image-20200211231331832   </div> </p></div> <div class="image-package"> <div class="image-container"> <div class="image-container-fill"></div> <div class="image-view" style="display:block;text-align:center;">     <img decoding="async" src="http://img.555519.xyz/uploads/20221230/b1a8fc8f94039e10bd284bd2fc36e8d3.jpg" alt="42. Vue组件传值-子组件通过事件调用向父组件传值"/> </div> </p></div> <div class="image-caption">    image-20200211231434985   </div> </p></div> <p>好了，到这里基本已经实现了子组件往父组件传值的整体过程了。</p> <p><strong>更多精彩原创Devops文章，快来关注我的Devops社群吧：</strong></p> <div class="image-package"> <div class="image-caption"></div> </p></div> </article> </div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3193.htm">.NET混合开发解决方案WebView2的进程模型</a></p>
                                                <p>下一个：<a href="/html/category/article-3195.htm">js+jQuery实现网页打字机效果（带光标）</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3388.htm" title="springboot的定时任务">springboot的定时任务</a></li>
                        <li class="py-2"><a href="/html/category/article-4089.htm" title="springboot 2.X Jar包部署到阿里云 配置SSL证书 启用HTTPS  通过域名访问">springboot 2.X Jar包部署到阿里云 配置SSL证书 启用HTTPS  通过域名访问</a></li>
                        <li class="py-2"><a href="/html/category/article-3421.htm" title="PHP类属性">PHP类属性</a></li>
                        <li class="py-2"><a href="/html/category/article-3376.htm" title="react18中react-redux状态管理的实现_React">react18中react-redux状态管理的实现_React</a></li>
                        <li class="py-2"><a href="/html/category/article-3445.htm" title="基于YARN HA集群的Spark HA集群">基于YARN HA集群的Spark HA集群</a></li>
                        <li class="py-2"><a href="/html/category/article-3392.htm" title="Python置换操作浅析(a, b=b, a)【Python】">Python置换操作浅析(a, b=b, a)【Python】</a></li>
                        <li class="py-2"><a href="/html/category/article-3386.htm" title="浅谈Vue下的components模板">浅谈Vue下的components模板</a></li>
                        <li class="py-2"><a href="/html/category/article-3377.htm" title="Android 4.0.1破坏了WebView HTML 5本地存储？">Android 4.0.1破坏了WebView HTML 5本地存储？</a></li>
                        <li class="py-2"><a href="/html/category/article-3405.htm" title="vue实现消息向上无缝滚动效果_vue.js_">vue实现消息向上无缝滚动效果_vue.js_</a></li>
                        <li class="py-2"><a href="/html/category/article-3389.htm" title="树莓派开发笔记入手研华ADVANTECH工控树莓派UNO-220套件介绍和运行系统">树莓派开发笔记入手研华ADVANTECH工控树莓派UNO-220套件介绍和运行系统</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">4</span> <a href="/html/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>