<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://qataraddress.github.io/html/category/article-3400.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>Mybatis 、SpringMVC、Spring 介绍及联系 - Qatar Address</title>
        <link rel="icon" href="/assets/addons/xcblog/img/qataraddress/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap -->
    <link href="/assets/addons/xcblog/css/qataraddress/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/addons/xcblog/css/qataraddress/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.carousel.css" rel="stylesheet">
    <link href="/assets/addons/xcblog/css/qataraddress/owl.theme.default.css" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/addons/xcblog/css/qataraddress/fontello.css">
    <link href="/assets/addons/xcblog/css/qataraddress/font-awesome.min.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?f2cd1f435343615e6078c743d0623024";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body>
        <!-- top-bar -->
    <div class="top-bar">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="logo">
                                                <a href="/">Qatar Address</a>
                                            </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.top-bar -->
    <!-- header-section-->
    <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <!-- navigations-->
                    <div class="navigation">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/html/category/">文章分类</a></li>
                                                                <li><a href="#">关于</a></li>
                                <li><a href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <!-- /.navigations-->
                </div>
            </div>
        </div>
    </div>
    <!-- /. header-section-->
    <!-- page-header -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 col-md-10 col-sm-10 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">Mybatis 、SpringMVC、Spring 介绍及联系</h1>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-breadcrumb">
                        <ol class="breadcrumb">
                            <li><a href="/">首页</a></li>
                            <li><a href="/html/category/">文章分类</a></li>
                            <li>正文</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.page-header-->
    <!-- /.page-header-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                      				  				  				<div id="content_views" class="markdown_views prism-kimbie-light"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#Mybatis_1" rel="nofollow">一、Mybatis</a></li> <li> <ul> <li><a href="#1_2" rel="nofollow">1、简介</a></li> <li><a href="#2_4" rel="nofollow">2、工作原理：</a></li> <li><a href="#3_8" rel="nofollow">3、工作流程图：</a></li> </ul> </li> <li><a href="#SpringMVC_12" rel="nofollow">二、SpringMVC</a></li> <li> <ul> <li><a href="#1MVC_13" rel="nofollow">1、MVC工作原理：</a></li> <li> <ul> <li><a href="#11MVC_20" rel="nofollow">1.1、MVC工作原理图：</a></li> </ul> </li> <li><a href="#21SpringMVC_23" rel="nofollow">2.1、SpringMVC工作原理</a></li> <li> <ul> <li><a href="#22SpringMVC_28" rel="nofollow">2.2、SpringMVC中的组件：</a></li> <li><a href="#23SpringMvc_40" rel="nofollow">2.3、SpringMvc工作原理图</a></li> <li><a href="#24_SpringMvc_42" rel="nofollow">2.4、 SpringMvc工作流程</a></li> <li><a href="#25_SpringMVC_66" rel="nofollow">2.5、 SpringMVC重点</a></li> </ul> </li> </ul> </li> <li><a href="#Spring_69" rel="nofollow">三、Spring</a></li> <li> <ul> <li><a href="#1_70" rel="nofollow">1、简介：</a></li> <li><a href="#2Spring_72" rel="nofollow">2、Spring原理：</a></li> <li><a href="#3Spring_AOPIOC_79" rel="nofollow">3、Spring两大核心： AOP与IOC</a></li> <li> <ul> <li><a href="#_80" rel="nofollow">作用：</a></li> <li><a href="#31_IOCInversion_of_control__82" rel="nofollow">3.1、 IOC(Inversion of control): 控制反转</a></li> <li><a href="#32AOPAspectOriented_Programming__86" rel="nofollow">3.2、AOP(Aspect-Oriented Programming): 面向方面编程</a></li> <li><a href="#34spring_104" rel="nofollow">3.4、spring的几个阶段：</a></li> </ul> </li> </ul> </li> </ul> </div> <h1> <a id="Mybatis_1" rel="nofollow"></a>一、Mybatis</h1> <h2> <a id="1_2" rel="nofollow"></a>1、简介</h2> <p>MyBatis 是一个基于 Java 的持久层框架，是对 jdbc 的封装，它让数据库底层操作变的透明。Mybatis 的操作都是围绕一个 sqlSessionFactory 实例展开的。Mybatis 通过配置文件关联到各实体类的 Mapper 文件，Mapper 文件中配置了每个类对数据库所需进行的 sql 语句映射。在每次与数据库交互时，通过 sqlSessionFactory 拿到一个sqlSession，再执行 sql 命令。在 Mybatis 中，sqlSessionFactory 可以看为一个数据库连接池，并使用的单例模式；sqlSession 就相当于一个数据库连接，它存活在某个具体的业务请求中。 创建映射器 映射器是 Mybatis 中最重要、最复杂的组件，它由一个接口和对应的 XML 文件(或注解组成)。</p> <h2> <a id="2_4" rel="nofollow"></a>2、工作原理：</h2> <p>mybatis通过sqlSessionFactoryBuilder从mybatis-config.xml配置文件(如上图第一步)中构建出sqlSessionFactory(线程安全);然后调用sqlSessionFactory的openSession()方法直接开启一个sqlSession,在通过sqlSession实例获得Mapper.xml对象并运行Mapper.xml映射的sql语句,完成对数据库的CRUD和事务提交,每完成一次操作之后sqlSession都需要关闭.</p> <h2> <a id="3_8" rel="nofollow"></a>3、工作流程图：</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230205/a458c260d60957fef6b6b29706119739.jpg" alt="Mybatis 、SpringMVC、Spring 介绍及联系"></p> <h1> <a id="SpringMVC_12" rel="nofollow"></a>二、SpringMVC</h1> <h2> <a id="1MVC_13" rel="nofollow"></a>1、MVC工作原理：</h2> <p>M:Model(完成业务逻辑 Service/dao/entity/)</p> <p>V:View(完成界面渲染 jsp/html)</p> <p>C:Controller(控制器-&gt;类似于CPU 接受请求-&gt;调用M-&gt;返回V)</p> <h3> <a id="11MVC_20" rel="nofollow"></a>1.1、MVC工作原理图：</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230205/1eea11cbd077d753d0a54a5620cca31a.jpg" alt="Mybatis 、SpringMVC、Spring 介绍及联系" width="95%"/></p> <h2> <a id="21SpringMVC_23" rel="nofollow"></a>2.1、SpringMVC工作原理</h2> <p>SpringMVC是一个MVC的开源框架，SpringMVC是Spring的一个后续产品，其实就是Spring在原有基础上，又提供了web应用的MVC模块，可以简单的把SpringMVC理解为是spring的一个模块（类似AOP，IOC这样的模块），网络上经常会说SpringMVC和Spring无缝集成，其实SpringMVC就是Spring的一个子模块，所以根本不需要同spring进行整合。</p> <h3> <a id="22SpringMVC_28" rel="nofollow"></a>2.2、SpringMVC中的组件：</h3> <p>前端控制器（DispatcherServlet）：接收请求，响应结果，相当于电脑的CPU。</p> <p>处理器映射器（HandlerMapping）：根据URL去查找处理器</p> <p>处理器（Handler）：（需要程序员去写代码处理逻辑的）</p> <p>处理器适配器（HandlerAdapter）：会把处理器包装成适配器，这样就可以支持多种类型的处理器，类比笔记本的适配器（适配器模式的应用）</p> <p>视图解析器（ViewResovler）：进行视图解析，多返回的字符串，进行处理，可以解析成对应的页面</p> <h3> <a id="23SpringMvc_40" rel="nofollow"></a>2.3、SpringMvc工作原理图</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230205/088bdf3da210b71ba2b0a301ec80841a.jpg" alt="Mybatis 、SpringMVC、Spring 介绍及联系"></p> <h3> <a id="24_SpringMvc_42" rel="nofollow"></a>2.4、 SpringMvc工作流程</h3> <blockquote> <p>第一步:用户发起请求到前端控制器（DispatcherServlet）</p> <p>第二步：前端控制器请求处理器映射器（HandlerMapping）去查找处理器（Handler）：通过xml配置或者注解进行查找</p> <p>第三步：找到以后处理器映射器（HandlerMappping）像前端控制器返回执行链（HandlerExecutionChain）</p> <p>第四步：前端控制器（DispatcherServlet）调用处理器适配器（HandlerAdapter）去执行处理器（Handler）</p> <p>第五步：处理器适配器去执行Handler</p> <p>第六步：Handler执行完给处理器适配器返回ModelAndView</p> <p>第七步：处理器适配器向前端控制器返回ModelAndView</p> <p>第八步：前端控制器请求视图解析器（ViewResolver）去进行视图解析</p> <p>第九步：视图解析器像前端控制器返回View</p> <p>第十步：前端控制器对视图进行渲染</p> <p>第十一步：前端控制器向用户响应结果</p> </blockquote> <h3> <a id="25_SpringMVC_66" rel="nofollow"></a>2.5、 SpringMVC重点</h3> <p>在于它的流程和注解，包括控制器、视图解析器、视图等内容；</p> <h1> <a id="Spring_69" rel="nofollow"></a>三、Spring</h1> <h2> <a id="1_70" rel="nofollow"></a>1、简介：</h2> <p>Spring是一种多层的J2EE应用程序框架，其核心就是提供一种新的机制管理业务对象及其依赖关系。它是一种容器框架，用于创建bean，维护bean之间的关系，它可以管理web层，持久层，业务层等，可以配置各个层的组件并且维护各个层的关系</p> <h2> <a id="2Spring_72" rel="nofollow"></a>2、Spring原理：</h2> <p>内部最核心的就是IOC了，动态注入，让一个对象的创建不用new了，可以自动的生产，这其实就是利用java里的反射，反射其实就是在运行时动态的去创建、调用对象，Spring就是在运行时，跟xml Spring的配置文件来动态的创建对象，和调用对象里的方法的 。<br /> Spring还有一个核心就是AOP这个就是面向切面编程，可以为某一类对象 进行监督和控制（也就是 在调用这类对象的具体方法的前后去调用你指定的 模块）从而达到对一个模块扩充的功能。这些都是通过 配置类达到的。<br /> Spring目的：就是让对象与对象（模块与模块）之间的关系没有通过代码来关联，都是通过配置类说明管理的（Spring根据这些配置 内部通过反射去动态的组装对象）<br /> 要记住：Spring是一个容器，凡是在容器里的对象才会有Spring所提供的这些服务和功能。<br /> Spring里用的最经典的一个设计模式就是：模板方法模式。(这里我都不介绍了，是一个很常用的设计模式)， Spring里的配置是很多的，很难都记住，但是Spring里的精华也无非就是以上的两点，把以上两点跟理解了 也就基本上掌握了Spring.</p> <h2> <a id="3Spring_AOPIOC_79" rel="nofollow"></a>3、Spring两大核心： AOP与IOC</h2> <h3> <a id="_80" rel="nofollow"></a>作用：</h3> <p>为程序解耦和代码的简介提供了支持。</p> <h3> <a id="31_IOCInversion_of_control__82" rel="nofollow"></a>3.1、 IOC(Inversion of control): 控制反转</h3> <p>1、IoC：<br /> 概念：控制权由对象本身转向容器；由容器根据配置文件去创建实例并创建各个实例之间的依赖关系<br /> 核心：bean工厂；在Spring中，bean工厂创建的各个实例称作bean</p> <h3> <a id="32AOPAspectOriented_Programming__86" rel="nofollow"></a>3.2、AOP(Aspect-Oriented Programming): 面向方面编程</h3> <p>1、 代理的两种方式：<br /> 静态代理：<br />  针对每个具体类分别编写代理类；<br />  针对一个接口编写一个代理类；<br /> 动态代理：<br /> 针对一个方面编写一个InvocationHandler，然后借用JDK反射包中的Proxy类为各种接口动态生成相应的代理类</p> <blockquote> <p>动态代理知识补充:</p> <p> 不用写代理类，虚拟机根据真实对象实现的接口产生一个类，通过类实例化一个动态代理，在实例化动态代理时将真实对象及装备注入到动态代理中，向客户端公开的是动态代理，当客户端调用动态代理方法时，动态代理根据类的反射得到真实对象的Method,调用装备的invoke方法，将动态代理、<br /> Method、方法参数传与装备的invoke方法，invoke方法在唤起method方法前或后做一些处理。</p> <pre><code>         1、产生动态代理的类:                          java.lang.refect.Proxy           2、装备必须实现InvocationHandler接口实现invoke方法 </code></pre> </blockquote> <h3> <a id="34spring_104" rel="nofollow"></a>3.4、spring的几个阶段：</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230205/8cddbc6fc52416ce6d8b03362912d5ca.jpg" alt="Mybatis 、SpringMVC、Spring 介绍及联系"></p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/qq_41123079/article/details/109543986"  rel="nofollow">参考1</a><br /><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/weixin_39867662/article/details/111267288"  rel="nofollow">参考2</a></p> </p></div> 			
                    <div class="clearfix"></div>
                    <div class="col-md-12 mt-5">
                                                <p>上一个：<a href="/html/category/article-3399.htm">获取java泛型真实类型的方式</a></p>
                                                <p>下一个：<a href="/html/category/article-3401.htm">petite-vue源码剖析-沙箱模型</a></p>
                                            </div>
                                    </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/html/category/article-3410.htm" title="innoDB如何解决幻读详解">innoDB如何解决幻读详解</a></li>
                        <li class="py-2"><a href="/html/category/article-3402.htm" title="微信小程序自定义顶部导航栏封装">微信小程序自定义顶部导航栏封装</a></li>
                        <li class="py-2"><a href="/html/category/article-3388.htm" title="springboot的定时任务">springboot的定时任务</a></li>
                        <li class="py-2"><a href="/html/category/article-3385.htm" title="Spring事件监听机制源码解析">Spring事件监听机制源码解析</a></li>
                        <li class="py-2"><a href="/html/category/article-3376.htm" title="react18中react-redux状态管理的实现_React">react18中react-redux状态管理的实现_React</a></li>
                        <li class="py-2"><a href="/html/category/article-3371.htm" title="浅谈Vue3中watchEffect的具体用法_vue.js">浅谈Vue3中watchEffect的具体用法_vue.js</a></li>
                        <li class="py-2"><a href="/html/category/article-3395.htm" title="关于Springcloud Sleuth分布式请求链路跟踪的使用 小结">关于Springcloud Sleuth分布式请求链路跟踪的使用 小结</a></li>
                        <li class="py-2"><a href="/html/category/article-3751.htm" title="记一次RabbitMQ连接阻塞，全部队列不消费异常">记一次RabbitMQ连接阻塞，全部队列不消费异常</a></li>
                        <li class="py-2"><a href="/html/category/article-3382.htm" title="SpringBoot + H2内置数据库">SpringBoot + H2内置数据库</a></li>
                        <li class="py-2"><a href="/html/category/article-3415.htm" title="浏览器禁用Cookie,基于Cookie的会话跟踪机制失效的解决的方法">浏览器禁用Cookie,基于Cookie的会话跟踪机制失效的解决的方法</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">61</span> <a href="/html/date/2024-05/" title="2024-05 归档">2024-05</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/html/date/2024-04/" title="2024-04 归档">2024-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">62</span> <a href="/html/date/2024-03/" title="2024-03 归档">2024-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">44</span> <a href="/html/date/2024-02/" title="2024-02 归档">2024-02</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </div>
        <!-- footer -->
    <div class="footer">
        <!-- tiny-footer -->
        <div class="container">
            <div class="row">
                <div class="tiny-footer">
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <p class="tiny-footer-para">
                            Qatar Address 版权所有 Powered by WordPress
                        </p>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                        <div class="tiny-section-social">
                            <div class="">
                                <ul>
                                    <li><a href="#"><i class="fa fa-facebook-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-twitter-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-google-plus-square"></i></a></li>
                                    <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                                    <li><a href="#"><i class="fa fa-linkedin-square"></i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /. tiny-footer -->
        </div>
    </div>
    <!-- /.footer -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/addons/xcblog/js/frontend/qataraddress/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/addons/xcblog/js/frontend/qataraddress/multiple-carousel.js"></script>
    <script>
    $(function() {
        $('.js_to').click(function(){
            var url = $(this).data('url');
            var code = $(this).data('code');
            url += code;

            window.open(url);
        })
    });
    </script>
</body>

</html>